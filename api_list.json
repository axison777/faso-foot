{
  "openapi": "3.1.0",
  "info": {
    "title": "Ligue de Faso",
    "version": "1",
    "description": "Api pour la gestion des matchs de la ligue de faso"
  },
  "servers": [
    {
      "url": "http://0cc7895703c7e06e842e35476157fc31.serveo.net/api"
    }
  ],
  "paths": {
    "/v1/calendar/{seasonId}": {
      "get": {
        "operationId": "calendar.calendarRetrivial",
        "summary": "Display a calendar of matches for a specific season",
        "tags": [
          "CalendarRetrivial"
        ],
        "parameters": [
          {
            "name": "seasonId",
            "in": "path",
            "required": true,
            "description": "The season ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "season_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "logo": {
                          "type": "string"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "second_leg_is_enabled": {
                          "type": "string"
                        },
                        "pool_id": {
                          "type": "string"
                        },
                        "calendar": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PhaseResource"
                          }
                        }
                      },
                      "required": [
                        "season_id",
                        "name",
                        "logo",
                        "start_date",
                        "end_date",
                        "second_leg_is_enabled",
                        "pool_id",
                        "calendar"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendar/{seasonId}/show": {
      "get": {
        "operationId": "v1.calendar.show",
        "summary": "Display a calendar of matches for a specific season",
        "tags": [
          "CalendarShow"
        ],
        "parameters": [
          {
            "name": "seasonId",
            "in": "path",
            "required": true,
            "description": "The season ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pool_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "leg",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "first_leg",
                "second_led"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "logo": {
                          "type": "string"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "pools": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PoolCalendarResource"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "logo",
                        "start_date",
                        "end_date",
                        "pools"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/reset-password": {
      "post": {
        "operationId": "v1.changePassword",
        "summary": "Permet Ã  un utilisateur de changer son mot de passe avec son ID",
        "tags": [
          "ChangePassword"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string",
                    "description": "'id' => 'required|uuid|exists:users,id',"
                  },
                  "new_password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "new_password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "current_password",
                  "new_password",
                  "new_password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Mot de passe changÃ© avec succÃ¨s."
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/cities/{id}": {
      "get": {
        "operationId": "v1.cities.show",
        "summary": "RÃ©cuper une ville par son id",
        "tags": [
          "CityById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id de la ville",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "$ref": "#/components/schemas/CityResource"
                            }
                          },
                          "required": [
                            "city"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "v1.cities.destroy",
        "summary": "Supprimer une ville via son identifiant",
        "tags": [
          "CityDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de la ville",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Ville supprimÃ©e avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.cities.update",
        "summary": "Mettre Ã  jour une ville via son identifiant",
        "tags": [
          "CityUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de la ville",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "$ref": "#/components/schemas/CityResource"
                            }
                          },
                          "required": [
                            "city"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Ville mise Ã  jour avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/cities": {
      "post": {
        "operationId": "v1.cities.store",
        "summary": "CrÃ©Ã©r une ville",
        "tags": [
          "CityCreation"
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "city": {
                          "$ref": "#/components/schemas/CityResource"
                        }
                      },
                      "required": [
                        "city"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ville crÃ©Ã©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "get": {
        "operationId": "v1.cities.index",
        "summary": "RÃ©cuper la liste des villes avec pagination",
        "tags": [
          "CityPaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Villes rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/cities/all": {
      "get": {
        "operationId": "v1.cities.all",
        "summary": "RÃ©cuper la liste des villes sans pagination",
        "tags": [
          "CityListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CityResource"
                          }
                        }
                      },
                      "required": [
                        "cities"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Villes rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/clubs": {
      "post": {
        "operationId": "club.clubCreating",
        "summary": "this method is used to create a club",
        "tags": [
          "ClubCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club": {
                          "$ref": "#/components/schemas/ClubSummaryResource"
                        }
                      },
                      "required": [
                        "club"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club created successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "club.clubLinsting",
        "tags": [
          "ClubLinsting"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "clubs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ClubSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "clubs"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Clubs listed successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/clubs/delete/{clubId}": {
      "delete": {
        "operationId": "club.clubDelete",
        "tags": [
          "ClubDelete"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Le club a Ã©tÃ© supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Le format de l'identifiant du club est invalide"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "L'identifiant du club est requis"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club non trouvÃ© ou dÃ©jÃ  supprimÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Une erreur inattendue est survenue"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/clubs/{clubId}": {
      "get": {
        "operationId": "club.clubDetail",
        "tags": [
          "ClubDetail"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_team",
            "in": "query",
            "schema": {
              "type": "string",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ClubWithTeamResource"
                            },
                            {
                              "$ref": "#/components/schemas/ClubResource"
                            }
                          ]
                        }
                      },
                      "required": [
                        "club"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club retrieved successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "club.clubUpdating",
        "summary": "this method is used to update a club",
        "tags": [
          "ClubUpdating"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormReques"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club": {
                          "$ref": "#/components/schemas/ClubSummaryResource"
                        }
                      },
                      "required": [
                        "club"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club updated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/clubs/paginate": {
      "get": {
        "operationId": "club.clubPagination",
        "tags": [
          "ClubPagination"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Clubs paginated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/clubs/{clubId}/reactivate": {
      "put": {
        "operationId": "club.clubReactivate",
        "tags": [
          "ClubReactivate"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club": {
                          "$ref": "#/components/schemas/ClubSummaryResource"
                        }
                      },
                      "required": [
                        "club"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club reactivated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/clubs/{clubId}/suspend": {
      "put": {
        "operationId": "club.clubSuspension",
        "tags": [
          "ClubSuspension"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspensionFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club": {
                          "$ref": "#/components/schemas/ClubSummaryResource"
                        }
                      },
                      "required": [
                        "club"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Club suspended successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/footballMatch/{id}": {
      "put": {
        "operationId": "v1.footballMatch.update",
        "summary": "Update a football match",
        "tags": [
          "FootbalMatchUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the football match to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFootballMatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "$matchRescheduled->load(['teamOne', 'teamTwo', 'stadium']);\ndd($result);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "autre_infos": {
                          "type": "array",
                          "description": "'updated_matches' => $this->updatedMatches($result['modified_matches']),",
                          "items": {}
                        }
                      },
                      "required": [
                        "autre_infos"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.footballMatch.show",
        "summary": "RÃ©cupÃ©rer un match avec ses relations",
        "tags": [
          "FootballMatchById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "match": {
                              "$ref": "#/components/schemas/FootballMatchResource"
                            }
                          },
                          "required": [
                            "match"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/users/forgot-password": {
      "post": {
        "operationId": "v1.forgotPassword",
        "summary": "Envoyer un email de rÃ©initialisation du mot de passe",
        "tags": [
          "ForgotPassword"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Un lien de rÃ©initialisation du mot de passe a Ã©tÃ© envoyÃ© Ã  votre adresse email."
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Nous allons faire des vÃ©rifications et vous envoyer les instructions Ã  suivre pour changer votre mot de passe."
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Impossible dâenvoyer le lien de rÃ©initialisation."
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/seasons/generate-calendar": {
      "post": {
        "operationId": "v1.seasons.generate_calendar",
        "tags": [
          "GenerateCalendarByPool"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeasonAndPoolsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "season": {
                          "type": "string"
                        },
                        "pools": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Pool"
                          }
                        }
                      },
                      "required": [
                        "season",
                        "pools"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Calendar generated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/jerseys": {
      "post": {
        "operationId": "v1.jerseys.store",
        "summary": "JerseyCreatingController*",
        "tags": [
          "JerseyCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JerseyStoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jersey": {
                          "$ref": "#/components/schemas/JerseySummaryResource"
                        }
                      },
                      "required": [
                        "jersey"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Jersey created successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.jerseys.index",
        "tags": [
          "JerseyListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jerseys": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/JerseySummaryResource"
                          }
                        }
                      },
                      "required": [
                        "jerseys"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Jerseys listed successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/jerseys/{id}": {
      "delete": {
        "operationId": "v1.jerseys.delete",
        "tags": [
          "JerseyDeleting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Jersey deleted successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "get": {
        "operationId": "v1.jerseys.show",
        "tags": [
          "JerseyDetail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "jersey": {
                              "$ref": "#/components/schemas/JerseyResource"
                            }
                          },
                          "required": [
                            "jersey"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Jersey retrieved successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.jerseys.update",
        "tags": [
          "JerseyUpdating"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JerseyUpdatingFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jersey": {
                          "$ref": "#/components/schemas/JerseySummaryResource"
                        }
                      },
                      "required": [
                        "jersey"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Jersey updated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/jerseys/teams/{clubId}": {
      "get": {
        "operationId": "jersey.jerseyFiltre",
        "summary": "Liste les maillots filtrÃ©s par club via paramÃ¨tre dâURL /teams/{clubId}",
        "tags": [
          "JerseyFiltre"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retourner les donnÃ©es avec la ressource",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "jerseys": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/JerseySummaryResource"
                              }
                            }
                          },
                          "required": [
                            "jerseys"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Maillots du club filtrÃ©s avec succÃ¨s."
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Aucun maillot trouvÃ© pour ce club."
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/leagues/{id}": {
      "get": {
        "operationId": "v1.leagues.show",
        "summary": "RÃ©cupÃ©rer une ligue par son identifiant",
        "tags": [
          "LeagueById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifiant de la ligue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "league": {
                              "$ref": "#/components/schemas/LeagueResource"
                            }
                          },
                          "required": [
                            "league"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "v1.leagues.destroy",
        "summary": "Supprimer une ligue",
        "tags": [
          "LeagueDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifiant de la ligue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Ligue supprimÃ©e avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.leagues.update",
        "summary": "Mettre Ã  jour une ligue via son identifiant",
        "tags": [
          "LeagueUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifiant de la ligue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeagueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "league": {
                              "$ref": "#/components/schemas/LeagueSummaryResource"
                            }
                          },
                          "required": [
                            "league"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Ligue mise Ã  jour avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/leagues": {
      "post": {
        "operationId": "v1.leagues.store",
        "summary": "CrÃ©er une ligue",
        "tags": [
          "LeagueCreation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreLeagueRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "league": {
                          "$ref": "#/components/schemas/LeagueSummaryResource"
                        }
                      },
                      "required": [
                        "league"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ligue crÃ©Ã©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.leagues.index",
        "summary": "RÃ©cupÃ©rer la liste des ligues avec pagination",
        "tags": [
          "LeaguePaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Liste des ligues rÃ©cupÃ©rÃ©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/leagues/all": {
      "get": {
        "operationId": "v1.leagues.all",
        "summary": "RÃ©cupÃ©rer la liste des ligues sans pagination",
        "tags": [
          "LeagueListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "leagues": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LeagueSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "leagues"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Liste des ligues rÃ©cupÃ©rÃ©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "v1.auth.login",
        "summary": "Connecter un utilisateur",
        "tags": [
          "Login"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "operationId": "v1.auth.logout",
        "summary": "DÃ©connecter un utilisateur",
        "tags": [
          "Logout"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/matchday-equilibrate/preview": {
      "post": {
        "operationId": "v1.matchday.equilibrate.preview",
        "summary": "Obtenir un aperÃ§u de la distribution actuelle des matchs",
        "tags": [
          "MatchDayEquilize"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "match_day_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "match_day_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "AperÃ§u de la distribution des matchs rÃ©cupÃ©rÃ© avec succÃ¨s"
                          ]
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "match_day_id": {
                              "type": "string"
                            },
                            "match_day_name": {
                              "type": "string"
                            },
                            "cities_to_equilibrate": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "maxItems": 0,
                              "additionalItems": false
                            },
                            "total_matches": {
                              "type": "string"
                            },
                            "cities_needing_equilibration": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "match_day_id",
                            "match_day_name",
                            "cities_to_equilibrate",
                            "total_matches",
                            "cities_needing_equilibration"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "message",
                        "data"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Aucune ville ne nÃ©cessite d'Ã©quilibrage (toutes les villes ont 2 matchs ou moins)"
                          ]
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "match_day_id": {
                              "type": "string"
                            },
                            "match_day_name": {
                              "type": "string"
                            },
                            "cities_to_equilibrate": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "maxItems": 0,
                              "additionalItems": false
                            },
                            "total_matches": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "match_day_id",
                            "match_day_name",
                            "cities_to_equilibrate",
                            "total_matches"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "message",
                        "data"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration de l'aperÃ§u"
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchday-equilibrate/equilibrate": {
      "post": {
        "operationId": "v1.matchday.equilibrate.process",
        "summary": "Ãquilibrer les matchs d'un matchDay",
        "tags": [
          "MatchDayEquilize"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "match_day_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "dry_run": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "match_day_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Simulation d'Ã©quilibrage effectuÃ©e avec succÃ¨s"
                          ]
                        }
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_day_id": {
                          "type": "string"
                        },
                        "match_day_name": {
                          "type": "string"
                        },
                        "is_dry_run": {
                          "type": "string"
                        },
                        "updated_matches_count": {
                          "type": "string"
                        },
                        "updated_matches": {
                          "type": "string"
                        },
                        "statistics": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_day_id",
                        "match_day_name",
                        "is_dry_run",
                        "updated_matches_count",
                        "updated_matches",
                        "statistics"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de l'Ã©quilibrage des matchs"
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchday-equilibrate/statistics": {
      "post": {
        "operationId": "v1.matchday.equilibrate.statistics",
        "summary": "Obtenir les statistiques d'Ã©quilibrage pour un matchDay",
        "tags": [
          "MatchDayEquilize"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "match_day_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "match_day_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Statistiques rÃ©cupÃ©rÃ©es avec succÃ¨s"
                          ]
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "match_day_id": {
                              "type": "string"
                            },
                            "match_day_name": {
                              "type": "string"
                            },
                            "total_matches": {
                              "type": "string"
                            },
                            "total_cities": {
                              "type": "string"
                            },
                            "cities_statistics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "maxItems": 0,
                              "additionalItems": false
                            },
                            "overall_equilibration": {
                              "type": "object",
                              "properties": {
                                "total_cities": {
                                  "type": "string"
                                },
                                "equilibrated_cities": {
                                  "type": "string"
                                },
                                "cities_needing_equilibration": {
                                  "type": "string"
                                },
                                "equilibration_percentage": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer",
                                      "enum": [
                                        100
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "total_cities",
                                "equilibrated_cities",
                                "cities_needing_equilibration",
                                "equilibration_percentage"
                              ]
                            }
                          },
                          "required": [
                            "match_day_id",
                            "match_day_name",
                            "total_matches",
                            "total_cities",
                            "cities_statistics",
                            "overall_equilibration"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "message",
                        "data"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Aucun match trouvÃ© pour ce matchDay"
                          ]
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "match_day_id": {
                              "type": "string"
                            },
                            "total_matches": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "cities_statistics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "maxItems": 0,
                              "additionalItems": false
                            }
                          },
                          "required": [
                            "match_day_id",
                            "total_matches",
                            "cities_statistics"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "message",
                        "data"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des statistiques"
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchday-equilibrate/reset": {
      "post": {
        "operationId": "v1.matchday.equilibrate.reset",
        "summary": "RÃ©initialiser l'Ã©quilibrage (remettre la distribution originale si possible)",
        "tags": [
          "MatchDayEquilize"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "match_day_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "match_day_id"
                ]
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "501": {
            "description": "Cette fonctionnalitÃ© nÃ©cessiterait un systÃ¨me de sauvegarde des Ã©tats prÃ©cÃ©dents\nPour l'instant, on retourne une rÃ©ponse informative",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "La fonctionnalitÃ© de rÃ©initialisation n'est pas encore implÃ©mentÃ©e. Il faudrait un systÃ¨me de sauvegarde des Ã©tats prÃ©cÃ©dents."
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/generate": {
      "post": {
        "operationId": "v1.matchdays.",
        "summary": "Generate match days based on the provided\nseason",
        "tags": [
          "MatchDayGenerate"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "season_id": {
                    "type": "integer"
                  },
                  "teams_count": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 2
                  },
                  "matches_per_match_day": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1
                  },
                  "pause_between_phases": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 0
                  },
                  "allowed_days": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday"
                      ]
                    }
                  }
                },
                "required": [
                  "season_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "matches": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MatchDaySummaryResource"
                          }
                        }
                      },
                      "required": [
                        "matches"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Matchs rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays": {
      "get": {
        "operationId": "v1.matchdays.match-days.list",
        "summary": "Liste les MatchDays avec possibilitÃ© de filtrage",
        "tags": [
          "MatchDayPeriod"
        ],
        "parameters": [
          {
            "name": "season_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "pool_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "start_date_from",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "start_date_to",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "with_matches_count",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "total": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "total"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/{matchDayId}": {
      "get": {
        "operationId": "v1.matchdays.match-days.details",
        "summary": "Obtient les informations dÃ©taillÃ©es d'un MatchDay avec ses matchs",
        "tags": [
          "MatchDayPeriod"
        ],
        "parameters": [
          {
            "name": "matchDayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_day": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "season_id": {
                              "type": "string"
                            },
                            "pool_id": {
                              "type": "string"
                            },
                            "start_date": {
                              "type": "string"
                            },
                            "end_date": {
                              "type": "string"
                            },
                            "period_info": {
                              "type": "object",
                              "properties": {
                                "duration_days": {
                                  "type": "string"
                                },
                                "duration_hours": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "duration_days",
                                "duration_hours"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "season_id",
                            "pool_id",
                            "start_date",
                            "end_date",
                            "period_info"
                          ]
                        },
                        "matches": {
                          "type": "string"
                        },
                        "matches_count": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_day",
                        "matches",
                        "matches_count"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/v1/matchdays/{matchDayId}/check-conflicts": {
      "post": {
        "operationId": "v1.matchdays.match-days.check-conflicts",
        "summary": "VÃ©rifie les conflits potentiels pour une extension donnÃ©e",
        "tags": [
          "MatchDayPeriod"
        ],
        "parameters": [
          {
            "name": "matchDayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "new_end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "has_conflicts": {
                          "type": "boolean"
                        },
                        "conflicts_count": {
                          "type": "string"
                        },
                        "conflicting_match_days": {
                          "type": "string"
                        },
                        "can_extend": {
                          "type": "string"
                        },
                        "extension_info": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "has_conflicts",
                        "conflicts_count",
                        "conflicting_match_days",
                        "can_extend",
                        "extension_info"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/matchdays/{matchDayId}/preview-extension": {
      "post": {
        "operationId": "v1.matchdays.match-days.preview-extension",
        "summary": "PrÃ©visualise l'extension d'un MatchDay",
        "tags": [
          "MatchDayPeriod"
        ],
        "parameters": [
          {
            "name": "matchDayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "new_end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "auto_push_others": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "error": {
                              "type": "string"
                            },
                            "can_proceed": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "success",
                            "error",
                            "can_proceed"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "current_period": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                },
                                "duration_days": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end",
                                "duration_days"
                              ]
                            },
                            "new_period": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                },
                                "duration_days": {
                                  "type": "string"
                                },
                                "duration_hours": {
                                  "type": "string"
                                },
                                "extended_before": {
                                  "type": "string"
                                },
                                "extended_after": {
                                  "type": "string"
                                },
                                "extension_days_before": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer",
                                      "enum": [
                                        0
                                      ]
                                    }
                                  ]
                                },
                                "extension_days_after": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer",
                                      "enum": [
                                        0
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "start",
                                "end",
                                "duration_days",
                                "duration_hours",
                                "extended_before",
                                "extended_after",
                                "extension_days_before",
                                "extension_days_after"
                              ]
                            },
                            "extension_summary": {
                              "type": "object",
                              "properties": {
                                "days_added_before": {
                                  "type": "string"
                                },
                                "days_added_after": {
                                  "type": "string"
                                },
                                "total_extension_days": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "days_added_before",
                                "days_added_after",
                                "total_extension_days"
                              ]
                            },
                            "conflicts": {
                              "type": "string"
                            },
                            "conflicting_match_days": {
                              "type": "string"
                            },
                            "matches_preview": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "maxItems": 0,
                              "additionalItems": false
                            },
                            "can_proceed": {
                              "type": "string"
                            },
                            "auto_push_enabled": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "success",
                            "current_period",
                            "new_period",
                            "extension_summary",
                            "conflicts",
                            "conflicting_match_days",
                            "matches_preview",
                            "can_proceed",
                            "auto_push_enabled"
                          ]
                        }
                      ]
                    },
                    "match_day": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "current_period": {
                          "type": "object",
                          "properties": {
                            "start_date": {
                              "type": "string"
                            },
                            "end_date": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "start_date",
                            "end_date"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "current_period"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "match_day"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/matchdays/{matchDayId}/extend-period": {
      "put": {
        "operationId": "v1.matchdays.match-days.extend-period",
        "summary": "Applique l'extension d'un MatchDay",
        "tags": [
          "MatchDayPeriod"
        ],
        "parameters": [
          {
            "name": "matchDayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "new_end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "auto_push_others": {
                    "type": "boolean"
                  },
                  "confirm_conflicts": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "extended_match_day": {
                          "type": "string"
                        },
                        "extension_summary": {
                          "type": "object",
                          "properties": {
                            "original_period": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                },
                                "duration_days": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end",
                                "duration_days"
                              ]
                            },
                            "new_period": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                },
                                "duration_days": {
                                  "type": "string"
                                },
                                "extension_days_before": {
                                  "type": "string"
                                },
                                "extension_days_after": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end",
                                "duration_days",
                                "extension_days_before",
                                "extension_days_after"
                              ]
                            },
                            "matches_redistributed": {
                              "type": "string"
                            },
                            "conflicts_resolved": {
                              "type": "string"
                            },
                            "pushed_match_days_count": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "original_period",
                            "new_period",
                            "matches_redistributed",
                            "conflicts_resolved",
                            "pushed_match_days_count"
                          ]
                        },
                        "pushed_match_days": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "extended_match_day",
                        "extension_summary",
                        "pushed_match_days"
                      ]
                    },
                    "backup_data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data",
                    "backup_data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string",
                      "enum": [
                        "Conflits dÃ©tectÃ©s"
                      ]
                    },
                    "conflicts": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Des conflits ont Ã©tÃ© dÃ©tectÃ©s. Utilisez auto_push_others=true ou confirm_conflicts=true pour continuer."
                      ]
                    },
                    "requires_confirmation": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "conflicts",
                    "message",
                    "requires_confirmation"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/rollback-extension": {
      "post": {
        "operationId": "v1.matchdays.match-days.rollback-extension",
        "summary": "Rollback d'une extension",
        "tags": [
          "MatchDayPeriod"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "original_data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "pushed_match_days_data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "original_data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rollback effectuÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "success",
                        "error"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "error": {
                          "type": "string",
                          "enum": [
                            "Erreur lors du rollback"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/preview-swap": {
      "post": {
        "operationId": "v1.matchdays.match-days.preview-swap",
        "summary": "PrÃ©visualise un Ã©change sans l'effectuer",
        "tags": [
          "MatchDaySwap"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "matchday1_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "matchday2_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "matchday1_id",
                  "matchday2_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "preview": {
                      "type": "string"
                    },
                    "can_proceed": {
                      "type": "string"
                    },
                    "matchdays_info": {
                      "type": "object",
                      "properties": {
                        "matchday1": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "current_dates": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "matches_count": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "number",
                            "current_dates",
                            "matches_count"
                          ]
                        },
                        "matchday2": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "current_dates": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "matches_count": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "number",
                            "current_dates",
                            "matches_count"
                          ]
                        }
                      },
                      "required": [
                        "matchday1",
                        "matchday2"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "preview",
                    "can_proceed",
                    "matchdays_info"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "can_proceed": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "can_proceed"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/swap": {
      "post": {
        "operationId": "v1.matchdays.match-days.swap",
        "summary": "Ãchange deux MatchDays",
        "tags": [
          "MatchDaySwap"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "matchday1_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "matchday2_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "matchday1_id",
                  "matchday2_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "swapped_match_days": {
                          "type": "string"
                        },
                        "matches_count": {
                          "type": "string"
                        },
                        "backup_data": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "swapped_match_days",
                        "matches_count",
                        "backup_data"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/rollback-swap": {
      "post": {
        "operationId": "v1.matchdays.match-days.rollback-swap",
        "summary": "Annule un Ã©change prÃ©cÃ©dent",
        "tags": [
          "MatchDaySwap"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "backup_data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "backup_data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ãchange annulÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de l'annulation de l'Ã©change"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/matchdays/{matchDayId}/swappable": {
      "get": {
        "operationId": "v1.matchdays.match-days.swappable",
        "summary": "Obtient la liste des MatchDays Ã©changeables pour un MatchDay donnÃ©",
        "tags": [
          "MatchDaySwap"
        ],
        "parameters": [
          {
            "name": "matchDayId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "current_matchday": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "dates": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string"
                            },
                            "end": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "start",
                            "end"
                          ]
                        },
                        "matches_count": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "number",
                        "dates",
                        "matches_count"
                      ]
                    },
                    "swappable_matchdays": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "current_matchday",
                    "swappable_matchdays"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-event": {
      "post": {
        "operationId": "v1.match-event.create",
        "tags": [
          "MatchEventCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "event": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "event"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/match-results/{id}": {
      "get": {
        "operationId": "v1.match-results.show",
        "summary": "RÃ©cupÃ©rer un rÃ©sultat de match par son identifiant",
        "tags": [
          "MatchResultById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/MatchResult"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match rÃ©cupÃ©rÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Format d'identifiant invalide"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match non trouvÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "v1.match-results.delete",
        "summary": "Supprimer un rÃ©sultat de match par son identifiant",
        "tags": [
          "MatchResultDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleted": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "deleted"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Format d'identifiant invalide"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la suppression du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "v1.match-results.update",
        "summary": "Mettre Ã  jour un rÃ©sultat de match par son identifiant",
        "tags": [
          "MatchResultUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMatchResultRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match mis Ã  jour avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Aucune donnÃ©e valide fournie pour la mise Ã  jour"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la mise Ã  jour du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results": {
      "post": {
        "operationId": "v1.match-results.create",
        "summary": "CrÃ©er un nouveau rÃ©sultat de match",
        "tags": [
          "MatchResultCreation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatchResultRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "$ref": "#/components/schemas/MatchResultResource"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la crÃ©ation du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.match-results.list",
        "summary": "RÃ©cupÃ©rer la liste des rÃ©sultats de matchs",
        "tags": [
          "MatchResultListing"
        ],
        "parameters": [
          {
            "name": "club_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "result_type",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "REGULAR",
                "EXTRA_TIME",
                "PENALTIES"
              ]
            }
          },
          {
            "name": "verified",
            "in": "query",
            "schema": {
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grand nombre pour obtenir tous les rÃ©sultats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_results": {
                          "type": "string"
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "count": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "string"
                            },
                            "current_page": {
                              "type": "string"
                            },
                            "last_page": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "count",
                            "per_page",
                            "current_page",
                            "last_page"
                          ]
                        }
                      },
                      "required": [
                        "match_results",
                        "meta"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultats de matchs rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des rÃ©sultats de matchs"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/full": {
      "post": {
        "operationId": "v1.match-results.create-full",
        "summary": "Enregistrer un rÃ©sultat de match avec des Ã©vÃ©nements",
        "tags": [
          "MatchResultCreationFull"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatchResultRequestFull"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "$ref": "#/components/schemas/MatchResultResource"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la crÃ©ation du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/paginated": {
      "get": {
        "operationId": "v1.match-results.paginated",
        "summary": "RÃ©cupÃ©rer la liste paginÃ©e des rÃ©sultats de matchs",
        "tags": [
          "MatchResultPaginated"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "club_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "result_type",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "REGULAR",
                "EXTRA_TIME",
                "PENALTIES"
              ]
            }
          },
          {
            "name": "verified",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "0",
                "1"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_results": {
                          "type": "string"
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "string"
                            },
                            "total": {
                              "type": "string"
                            },
                            "last_page": {
                              "type": "string"
                            },
                            "from": {
                              "type": "string"
                            },
                            "to": {
                              "type": "string"
                            },
                            "has_more_pages": {
                              "type": "string"
                            },
                            "prev_page_url": {
                              "type": "string"
                            },
                            "next_page_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "current_page",
                            "per_page",
                            "total",
                            "last_page",
                            "from",
                            "to",
                            "has_more_pages",
                            "prev_page_url",
                            "next_page_url"
                          ]
                        }
                      },
                      "required": [
                        "match_results",
                        "pagination"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultats de matchs rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des rÃ©sultats de matchs"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/statistics/general": {
      "get": {
        "operationId": "v1.match-results.statistics.general",
        "summary": "RÃ©cupÃ©rer les statistiques gÃ©nÃ©rales des rÃ©sultats",
        "tags": [
          "MatchResultStatistics"
        ],
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          },
          {
            "name": "club_id",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          {
            "name": "result_type",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "REGULAR",
                "EXTRA_TIME",
                "PENALTIES"
              ]
            }
          },
          {
            "name": "verified",
            "in": "query",
            "schema": {
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_matches": {
                              "type": "string"
                            },
                            "regular_time_decisions": {
                              "type": "string"
                            },
                            "extra_time_decisions": {
                              "type": "string"
                            },
                            "penalty_decisions": {
                              "type": "string"
                            },
                            "draws": {
                              "type": "string"
                            },
                            "total_goals": {
                              "type": "string"
                            },
                            "average_goals_per_match": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "enum": [
                                    0
                                  ]
                                }
                              ]
                            },
                            "verified_results": {
                              "type": "string"
                            },
                            "unverified_results": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_matches",
                            "regular_time_decisions",
                            "extra_time_decisions",
                            "penalty_decisions",
                            "draws",
                            "total_goals",
                            "average_goals_per_match",
                            "verified_results",
                            "unverified_results"
                          ]
                        },
                        "filters_applied": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "statistics",
                        "filters_applied"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Statistiques gÃ©nÃ©rales rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des statistiques gÃ©nÃ©rales"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/statistics/club/{clubId}": {
      "get": {
        "operationId": "v1.match-results.statistics.club",
        "summary": "RÃ©cupÃ©rer les statistiques d'un club spÃ©cifique",
        "tags": [
          "MatchResultStatistics"
        ],
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "description": "L'identifiant du club",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "club_id": {
                          "type": "string"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "matches": {
                              "type": "string"
                            },
                            "wins": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "draws": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "losses": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "goals_for": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "goals_against": {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            },
                            "goal_difference": {
                              "type": "string"
                            },
                            "points": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "matches",
                            "wins",
                            "draws",
                            "losses",
                            "goals_for",
                            "goals_against",
                            "goal_difference",
                            "points"
                          ]
                        },
                        "recent_results": {
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "club_id",
                        "statistics",
                        "recent_results"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Statistiques du club rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Format d'identifiant invalide"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des statistiques du club"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/statistics/unverified": {
      "get": {
        "operationId": "v1.match-results.statistics.unverified",
        "summary": "RÃ©cupÃ©rer les rÃ©sultats non vÃ©rifiÃ©s",
        "tags": [
          "MatchResultStatistics"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "unverified_results": {
                          "type": "object"
                        },
                        "count": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "unverified_results",
                        "count"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultats non vÃ©rifiÃ©s rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des rÃ©sultats non vÃ©rifiÃ©s"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/statistics/draws": {
      "get": {
        "operationId": "v1.match-results.statistics.draws",
        "summary": "RÃ©cupÃ©rer les matchs nuls",
        "tags": [
          "MatchResultStatistics"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "draws": {
                          "type": "object"
                        },
                        "count": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "draws",
                        "count"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Matchs nuls rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des matchs nuls"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/statistics/by-type/{resultType}": {
      "get": {
        "operationId": "v1.match-results.statistics.by-type",
        "summary": "RÃ©cupÃ©rer les rÃ©sultats par type",
        "tags": [
          "MatchResultStatistics"
        ],
        "parameters": [
          {
            "name": "resultType",
            "in": "path",
            "required": true,
            "description": "Le type de rÃ©sultat",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "result_type": {
                          "type": "string"
                        },
                        "results": {
                          "type": "object"
                        },
                        "count": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "result_type",
                        "results",
                        "count"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultats par type rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Type de rÃ©sultat invalide. Valeurs acceptÃ©es: REGULAR, EXTRA_TIME, PENALTIES"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la rÃ©cupÃ©ration des rÃ©sultats par type"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/{id}/verification/verify": {
      "post": {
        "operationId": "v1.match-results.verification.verify",
        "summary": "VÃ©rifier un rÃ©sultat de match",
        "tags": [
          "MatchResultVerification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ©sultat de match vÃ©rifiÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la vÃ©rification du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/{id}/verification/unverify": {
      "post": {
        "operationId": "v1.match-results.verification.unverify",
        "summary": "Annuler la vÃ©rification d'un rÃ©sultat de match",
        "tags": [
          "MatchResultVerification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "VÃ©rification du rÃ©sultat de match annulÃ©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de l'annulation de la vÃ©rification du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/match-results/{id}/verification/toggle": {
      "patch": {
        "operationId": "v1.match-results.verification.toggle",
        "summary": "Basculer l'Ã©tat de vÃ©rification d'un rÃ©sultat de match",
        "tags": [
          "MatchResultVerification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du rÃ©sultat de match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verified": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "verified"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_result": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "match_result"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "VÃ©rification du rÃ©sultat de match annulÃ©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Erreur lors de la modification de la vÃ©rification du rÃ©sultat de match"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/assign": {
      "post": {
        "operationId": "official.officialAssign",
        "tags": [
          "OfficialAssign"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfficialAssignFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "assignment": {
                          "$ref": "#/components/schemas/AssignmentResource"
                        }
                      },
                      "required": [
                        "assignment"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officiel assignÃ© au match avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "Log::error(\"Erreur assignation officiel: \" . $e->getMessage());\nreturn $this->errorResponse(\nmessage: \"Impossible dâassigner lâofficiel au match\",\ncode: Response::HTTP_INTERNAL_SERVER_ERROR\n);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "trace": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "trace"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official": {
      "post": {
        "operationId": "v1.Official.create",
        "tags": [
          "OfficialCreate"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfficialStoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "official": {
                          "$ref": "#/components/schemas/OfficialSummaryResource"
                        }
                      },
                      "required": [
                        "official"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officiel crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.Official.list",
        "tags": [
          "OfficialListing"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "officials": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OfficialSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "officials"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officials listed successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Invalid status"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/delete/{officialId}": {
      "delete": {
        "operationId": "official.officialDelete",
        "tags": [
          "OfficialDelete"
        ],
        "parameters": [
          {
            "name": "officialId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "L'officiel a Ã©tÃ© supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Le format de l'identifiant de l'officiel est invalide"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officiel non trouvÃ© ou dÃ©jÃ  supprimÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Une erreur inattendue est survenue"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/matchOfficials/{matchId}": {
      "get": {
        "operationId": "v1.Official.matchOfficials",
        "summary": "la listes des officiels d'un match",
        "tags": [
          "OfficialMachtes"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "officials": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "officials"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Official Matchs retrieved successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/officialMatchs/{officialId}": {
      "get": {
        "operationId": "v1.Official.officialMatchs",
        "summary": "la listes des matchs d'un officiel",
        "tags": [
          "OfficialMachtes"
        ],
        "parameters": [
          {
            "name": "officialId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dd($official->matches);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "official": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "official_type": {
                              "type": "string"
                            },
                            "license_number": {
                              "type": "string"
                            },
                            "level": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "user_id": {
                              "type": "string"
                            },
                            "matches": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OfficialMatchResource"
                              }
                            },
                            "user": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "first_name",
                            "last_name",
                            "official_type",
                            "license_number",
                            "level",
                            "status",
                            "user_id",
                            "matches",
                            "user"
                          ]
                        }
                      },
                      "required": [
                        "official"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Official Matchs retrieved successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/paginate": {
      "get": {
        "operationId": "v1.Official.paginate",
        "tags": [
          "OfficialPagination"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officials paginated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/official-reports": {
      "post": {
        "operationId": "v1.official-reports.store",
        "summary": "CrÃ©er un nouveau rapport officiel\nPOST /api/official-reports",
        "tags": [
          "OfficialReport"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOfficialReportFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/OfficialReportResource"
                        }
                      },
                      "required": [
                        "report"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.official-reports.index",
        "summary": "Lister tous les rapports avec filtres optionnels\nGET /api/official-reports",
        "tags": [
          "OfficialReport"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reports": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OfficialReportResource"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "per_page": {
                              "type": "string"
                            },
                            "current_page": {
                              "type": "string"
                            },
                            "last_page": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total",
                            "per_page",
                            "current_page",
                            "last_page"
                          ]
                        }
                      },
                      "required": [
                        "reports",
                        "pagination"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Liste des rapports rÃ©cupÃ©rÃ©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/official-reports/{id}": {
      "put": {
        "operationId": "v1.official-reports.update",
        "summary": "Mettre Ã  jour un rapport existant\nPUT/PATCH /api/official-reports/{id}",
        "tags": [
          "OfficialReport"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreOfficialReportFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/OfficialReportResource"
                        }
                      },
                      "required": [
                        "report"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel mis Ã  jour avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.official-reports.show",
        "summary": "RÃ©cupÃ©rer un rapport spÃ©cifique\nGET /api/official-reports/{id}",
        "tags": [
          "OfficialReport"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/OfficialReportResource"
                        }
                      },
                      "required": [
                        "report"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel rÃ©cupÃ©rÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "v1.official-reports.destroy",
        "summary": "Supprimer un rapport (seulement si DRAFT)\nDELETE /api/official-reports/{id}",
        "tags": [
          "OfficialReport"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/official-reports/{id}/submit": {
      "post": {
        "operationId": "v1.official-reports.submit",
        "summary": "Soumettre un rapport (DRAFT â SUBMITTED)\nPOST /api/official-reports/{id}/submit",
        "tags": [
          "OfficialReport"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/OfficialReportResource"
                        }
                      },
                      "required": [
                        "report"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel soumis avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/official-reports/{id}/review": {
      "post": {
        "operationId": "v1.official-reports.review",
        "summary": "RÃ©viser un rapport (SUBMITTED â REVIEWED)\nPOST /api/official-reports/{id}/review",
        "tags": [
          "OfficialReport"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "review_notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/OfficialReportResource"
                        }
                      },
                      "required": [
                        "report"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Rapport officiel rÃ©visÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/Official/show/{id}": {
      "get": {
        "operationId": "official.officialShow",
        "tags": [
          "OfficialShow"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "**Optional**",
            "schema": {
              "type": "string",
              "default": null
            },
            "x-optional": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "official": {
                          "$ref": "#/components/schemas/OfficialSummaryResource"
                        }
                      },
                      "required": [
                        "official"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Les dÃ©tails de l'officiel ont Ã©tÃ© rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Le format de l'identifiant de l'officiel est invalide"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "L'identifiant de l'officiel est requis"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officiel non trouvÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "trace": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "trace"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Official/{officialId}": {
      "put": {
        "operationId": "v1.Official.update",
        "tags": [
          "OfficialUpdating"
        ],
        "parameters": [
          {
            "name": "officialId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfficialUpdatingFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "official": {
                          "$ref": "#/components/schemas/OfficialSummaryResource"
                        }
                      },
                      "required": [
                        "official"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Officiel mis Ã  jour avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/permissions": {
      "post": {
        "operationId": "v1.permissions.create",
        "summary": "CrÃ©Ã© une nouvelle permission",
        "tags": [
          "PermissionCreate"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorePermissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "permission": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.PermissionResource"
                        }
                      },
                      "required": [
                        "permission"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Permission crÃ©Ã©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.permissions.index",
        "tags": [
          "PermissionPaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/permissions/{slug}": {
      "delete": {
        "operationId": "v1.permissions.delete",
        "tags": [
          "PermissionDelete"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Permission supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.permissions.show",
        "tags": [
          "PermissionFindBySlug"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "permission": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.PermissionResource"
                        }
                      },
                      "required": [
                        "permission"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "v1.permissions.update",
        "tags": [
          "PermissionUpdate"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "permission": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.PermissionResource"
                        }
                      },
                      "required": [
                        "permission"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups": {
      "post": {
        "operationId": "v1.callups.store",
        "summary": "CrÃ©er un nouvel appel",
        "tags": [
          "PlayerCallup"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Appel crÃ©Ã© et configurÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups/{callupId}/players": {
      "post": {
        "operationId": "v1.callups.players.add",
        "summary": "Ajouter les joueurs Ã  l'appel",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "players": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "player_id": {
                          "type": "integer"
                        },
                        "jersey_number": {
                          "type": "integer"
                        },
                        "position": {
                          "type": "string",
                          "enum": [
                            "GOALKEEPER",
                            "DEFENSE",
                            "MIDFIELD",
                            "ATTACK"
                          ]
                        },
                        "is_starter": {
                          "type": "boolean"
                        },
                        "substitute_order": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "player_id",
                        "jersey_number",
                        "position",
                        "is_starter"
                      ]
                    },
                    "minItems": 11,
                    "maxItems": 23
                  }
                },
                "required": [
                  "players"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Joueurs ajoutÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups/{callupId}/formation": {
      "post": {
        "operationId": "v1.callups.formation.set",
        "summary": "DÃ©finir uniquement la formation",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formation": {
                    "type": "string",
                    "enum": [
                      "4-4-2",
                      "4-3-3",
                      "3-5-2",
                      "4-2-3-1",
                      "3-4-3"
                    ]
                  }
                },
                "required": [
                  "formation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Formation dÃ©finie avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups/{callupId}/captain": {
      "post": {
        "operationId": "v1.callups.captain.set",
        "summary": "DÃ©finir uniquement le capitaine",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "captain_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "captain_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Capitaine dÃ©signÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups/{callupId}/formation-captain": {
      "post": {
        "operationId": "v1.callups.formation-captain.set",
        "summary": "DÃ©finir formation et capitaine en une fois",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formation": {
                    "type": "string",
                    "enum": [
                      "4-4-2",
                      "4-3-3",
                      "3-5-2",
                      "4-2-3-1",
                      "3-4-3"
                    ]
                  },
                  "captain_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "captain_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Formation et capitaine dÃ©finis avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/callups/{callupId}": {
      "put": {
        "operationId": "v1.callups.update",
        "summary": "Mise Ã  jour complÃ¨te (joueurs + formation + capitaine)",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formation": {
                    "type": "string",
                    "enum": [
                      "4-4-2",
                      "4-3-3",
                      "3-5-2",
                      "4-2-3-1",
                      "3-4-3"
                    ]
                  },
                  "captain_id": {
                    "type": "integer"
                  },
                  "players": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "player_id": {
                          "type": "integer"
                        },
                        "jersey_number": {
                          "type": "integer"
                        },
                        "position": {
                          "type": "string",
                          "enum": [
                            "GOALKEEPER",
                            "DEFENSE",
                            "MIDFIELD",
                            "ATTACK"
                          ]
                        },
                        "is_starter": {
                          "type": "boolean"
                        },
                        "substitute_order": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "player_id",
                        "jersey_number",
                        "position",
                        "is_starter"
                      ]
                    }
                  }
                },
                "required": [
                  "captain_id",
                  "players"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Appel mis Ã  jour complÃ¨tement"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.callups.show",
        "summary": "Voir les dÃ©tails de l'appel",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "DÃ©tails de l'appel rÃ©cupÃ©rÃ©s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/v1/callups/{callupId}/finalize": {
      "post": {
        "operationId": "v1.callups.finalize",
        "summary": "Finaliser l'appel",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "callupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "callup": {
                          "$ref": "#/components/schemas/PlayersCallupResource"
                        }
                      },
                      "required": [
                        "callup"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Appel finalisÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/callups/available-players/{teamId}": {
      "get": {
        "operationId": "v1.callups.available-players",
        "summary": "Obtenir les joueurs disponibles pour une Ã©quipe",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dd($players);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "available_players": {
                          "type": "array",
                          "description": "\"available_players\" => $players",
                          "items": {
                            "$ref": "#/components/schemas/PlayerCallupResource"
                          }
                        }
                      },
                      "required": [
                        "available_players"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Joueurs disponibles rÃ©cupÃ©rÃ©s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/callups/match/{matchId}": {
      "get": {
        "operationId": "v1.callups.match",
        "summary": "Obtenir les appels d'un match",
        "tags": [
          "PlayerCallup"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dd($match);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "match_callups": {
                          "$ref": "#/components/schemas/MatchCallUpsResource"
                        }
                      },
                      "required": [
                        "match_callups"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Appels rÃ©cupÃ©rÃ©s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "dd($e);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/player-contracts": {
      "post": {
        "operationId": "playerContract.playerContractCreating",
        "tags": [
          "PlayerContractCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerContractCreatingFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player_contract": {
                          "$ref": "#/components/schemas/PlayerContractSummuryResource"
                        }
                      },
                      "required": [
                        "player_contract"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player contract created successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "playerContract.playerContractListing",
        "tags": [
          "PlayerContractListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player_contracts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PlayerContractSummuryResource"
                          }
                        }
                      },
                      "required": [
                        "player_contracts"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player contracts listed successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/player-contracts/{playerContractId}": {
      "delete": {
        "operationId": "playerContract.playerContractDeleting",
        "tags": [
          "PlayerContractDeleting"
        ],
        "parameters": [
          {
            "name": "playerContractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player contract deleted successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "playerContract.playerContractUpdating",
        "tags": [
          "PlayerContractUpdating"
        ],
        "parameters": [
          {
            "name": "playerContractId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerContractUpdatingFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player_contract": {
                          "$ref": "#/components/schemas/PlayerContractSummuryResource"
                        }
                      },
                      "required": [
                        "player_contract"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player contract updated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/player-contracts/paginate": {
      "get": {
        "operationId": "playerContract.playerContractPagination",
        "tags": [
          "PlayerContractPagination"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player contracts paginated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/players": {
      "post": {
        "operationId": "v1.players.create",
        "tags": [
          "PlayerCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PlayerStoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player": {
                          "$ref": "#/components/schemas/PlayerSummuryResource"
                        }
                      },
                      "required": [
                        "player"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player created successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.players.list",
        "tags": [
          "PlayerListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "players": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PlayerSummuryResource"
                          }
                        }
                      },
                      "required": [
                        "players"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Players listed successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/players/delete/{playerId}": {
      "delete": {
        "operationId": "player.playerDelete",
        "tags": [
          "PlayerDelete"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Le joueur a Ã©tÃ© supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Le format de l'identifiant du joueur est invalide"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Joueur non trouvÃ© ou dÃ©jÃ  supprimÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Une erreur inattendue est survenue"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/players/paginate": {
      "get": {
        "operationId": "v1.players.paginate",
        "tags": [
          "PlayerPagination"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Players paginated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/players/show/{id}": {
      "get": {
        "operationId": "player.playerShow",
        "tags": [
          "PlayerShow"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "**Optional**",
            "schema": {
              "type": "string",
              "default": null
            },
            "x-optional": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player": {
                          "$ref": "#/components/schemas/PlayerSummuryResource"
                        }
                      },
                      "required": [
                        "player"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Les dÃ©tails du joueur ont Ã©tÃ© rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Le format de l'identifiant du joueur est invalide"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "L'identifiant du joueur est requis"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Joueur non trouvÃ©"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Une erreur inattendue est survenue"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Erreur lors du formatage des donnÃ©es du joueur"
                          ]
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/players/{playerId}": {
      "put": {
        "operationId": "v1.players.update",
        "tags": [
          "PlayerUpdating"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PlayerUpdatingFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "player": {
                          "$ref": "#/components/schemas/PlayerSummuryResource"
                        }
                      },
                      "required": [
                        "player"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Player updated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/rankings/{pool_id}": {
      "get": {
        "operationId": "v1.rankings.show",
        "summary": "Afficher le classement d'une saison",
        "tags": [
          "Ranking"
        ],
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "v1.auth.refresh",
        "summary": "RafraÃ®chir un token d'accÃ¨s",
        "tags": [
          "RefreshToken"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/v1/return-phase/regenerate": {
      "post": {
        "operationId": "v1.api.return-phase.regenerate",
        "summary": "RÃ©gÃ©nÃ¨re la phase retour d'une poule",
        "tags": [
          "ReturnPhase"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateReturnPhaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Phase retour rÃ©gÃ©nÃ©rÃ©e avec succÃ¨s"
                          ]
                        },
                        "pool": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "season": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_end_date": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "updated_end_date"
                          ]
                        },
                        "last_match_date": {
                          "type": "string"
                        },
                        "validation_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_matches": {
                              "type": "string"
                            },
                            "total_match_days": {
                              "type": "string"
                            },
                            "matches_per_day": {
                              "type": "string"
                            },
                            "date_range": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "stadiums_used": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_matches",
                            "total_match_days",
                            "matches_per_day",
                            "date_range",
                            "stadiums_used"
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "pool",
                        "season",
                        "last_match_date",
                        "validation_errors",
                        "statistics"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "La poule ne correspond pas Ã  la saison spÃ©cifiÃ©e"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/v1/return-phase/validate": {
      "post": {
        "operationId": "v1.api.return-phase.validate",
        "summary": "Valide la cohÃ©rence de la phase retour d'une poule",
        "tags": [
          "ReturnPhase"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pool": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "season": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "is_valid": {
                          "type": "string"
                        },
                        "validation_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Phase retour valide",
                            "Erreurs dÃ©tectÃ©es dans la phase retour"
                          ]
                        }
                      },
                      "required": [
                        "pool",
                        "season",
                        "is_valid",
                        "validation_errors",
                        "message"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "La poule ne correspond pas Ã  la saison spÃ©cifiÃ©e"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "DonnÃ©es de validation invalides"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/v1/return-phase/statistics": {
      "get": {
        "operationId": "v1.api.return-phase.statistics",
        "summary": "Obtient les statistiques de la phase retour d'une poule",
        "tags": [
          "ReturnPhase"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pool": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "season": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_matches": {
                              "type": "string"
                            },
                            "total_match_days": {
                              "type": "string"
                            },
                            "matches_per_day": {
                              "type": "string"
                            },
                            "date_range": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "stadiums_used": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_matches",
                            "total_match_days",
                            "matches_per_day",
                            "date_range",
                            "stadiums_used"
                          ]
                        }
                      },
                      "required": [
                        "pool",
                        "season",
                        "statistics"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "La poule ne correspond pas Ã  la saison spÃ©cifiÃ©e"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "DonnÃ©es de validation invalides"
                      ]
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendar/return-phase/regenerate": {
      "post": {
        "operationId": "modules.calendar.v1.calendar.returnPhase.regenerateReturnPhase_0",
        "summary": "RÃ©gÃ©nÃ¨re la phase retour d'une poule",
        "tags": [
          "ReturnPhase"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateReturnPhaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Phase retour rÃ©gÃ©nÃ©rÃ©e avec succÃ¨s"
                          ]
                        },
                        "pool": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "season": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_end_date": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "updated_end_date"
                          ]
                        },
                        "last_match_date": {
                          "type": "string"
                        },
                        "validation_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_matches": {
                              "type": "string"
                            },
                            "total_match_days": {
                              "type": "string"
                            },
                            "matches_per_day": {
                              "type": "string"
                            },
                            "date_range": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ]
                            },
                            "stadiums_used": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_matches",
                            "total_match_days",
                            "matches_per_day",
                            "date_range",
                            "stadiums_used"
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "pool",
                        "season",
                        "last_match_date",
                        "validation_errors",
                        "statistics"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "La poule ne correspond pas Ã  la saison spÃ©cifiÃ©e"
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/roles": {
      "post": {
        "operationId": "v1.roles.create",
        "summary": "CrÃ©Ã© un rÃ´le",
        "tags": [
          "RoleCreate"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreRoleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.RoleResource"
                        }
                      },
                      "required": [
                        "role"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ´le crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.roles.index",
        "summary": "RÃ©cupÃ©rer la liste paginÃ©e des rÃ´les",
        "tags": [
          "RolePaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/roles/{slug}": {
      "delete": {
        "operationId": "v1.roles.delete",
        "summary": "Supprimer un rÃ´le via son slug",
        "tags": [
          "RoleDelete"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "RÃ´le supprimÃ© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.roles.show",
        "summary": "RÃ©cupÃ©rer un rÃ´le par son slug",
        "tags": [
          "RoleFindBySlug"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.RoleResource"
                        }
                      },
                      "required": [
                        "role"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "v1.roles.update",
        "description": "NB: Toutes les anciennes permissions seront remplacÃ©es par les nouvelles.\nDonc si vous voulez garder les anciennes permissions, vous devez les inclure dans le tableau des nouvelles permissions.",
        "summary": "Mettre Ã  jour un rÃ´le via son slug",
        "tags": [
          "RoleUpdate"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.RoleResource"
                        }
                      },
                      "required": [
                        "role"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/seasons": {
      "post": {
        "operationId": "v1.seasons.store",
        "summary": "CrÃ©Ã©r une saison et ses contraintes",
        "tags": [
          "SeasonAndSettingCreation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreSeasonRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "season": {
                          "$ref": "#/components/schemas/SeasonSummaryResource"
                        }
                      },
                      "required": [
                        "season"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Saison et ses contraintes crÃ©Ã©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.seasons.index",
        "summary": "RÃ©cupÃ©rer les saisons paginÃ©es avec leurs matchs",
        "tags": [
          "SeasonPaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Saisons rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/seasons/{id}": {
      "get": {
        "operationId": "v1.seasons.show",
        "summary": "RÃ©cupÃ©rer une saison par son identifiant avec ses matches",
        "tags": [
          "SeasonById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de la saison",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "season": {
                              "$ref": "#/components/schemas/SeasonResource"
                            }
                          },
                          "required": [
                            "season"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "v1.seasons.destroy",
        "summary": "Supprimer une saison par son identifiant",
        "tags": [
          "SeasonDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de la saison",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Saison supprimÃ©e avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.seasons.update",
        "summary": "Mettre Ã  jour une saison par son identifiant",
        "tags": [
          "SeasonUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de la saison",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeasonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "season": {
                              "$ref": "#/components/schemas/SeasonSummaryResource"
                            }
                          },
                          "required": [
                            "season"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Saison mise Ã  jour avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/seasons/all": {
      "get": {
        "operationId": "v1.seasons.all",
        "summary": "RÃ©cupÃ©rer la liste des saisons avec leurs matchs mais sans pagination",
        "tags": [
          "SeasonListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "seasons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SeasonSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "seasons"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Saisons rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/stadiums/{id}": {
      "get": {
        "operationId": "v1.stadiums.show",
        "summary": "RÃ©cupÃ¨re un stade via son ID avec ses relations",
        "tags": [
          "StadiumById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du stade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "stadium": {
                              "$ref": "#/components/schemas/StadiumResource"
                            }
                          },
                          "required": [
                            "stadium"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "v1.stadiums.destroy",
        "summary": "Supprimer un stade via son ID",
        "tags": [
          "StadiumDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du stade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Stade supprimÃ© avec succÃ¨s."
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.stadiums.update",
        "summary": "Mettre Ã  jour les informations d'un stade",
        "tags": [
          "StadiumUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant du stade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStadiumRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "stadium": {
                              "$ref": "#/components/schemas/StadiumSummaryResource"
                            }
                          },
                          "required": [
                            "stadium"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Stade modifiÃ© avec succÃ¨s."
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/stadiums": {
      "post": {
        "operationId": "v1.stadiums.store",
        "summary": "CrÃ©er un stade",
        "tags": [
          "StadiumCreation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreStadiumRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "stadium": {
                          "$ref": "#/components/schemas/StadiumSummaryResource"
                        }
                      },
                      "required": [
                        "stadium"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Stade crÃ©Ã© avec succÃ¨s."
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.stadiums.index",
        "summary": "RÃ©cupÃ©rer les stades paginÃ©s avec leurs relations(Ville d'appartenance, \nÃ©quipe propriÃ©taire et les matches qui y ont Ã©tÃ© jouÃ©s)",
        "tags": [
          "StadiumPaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Stades rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/stadiums/all": {
      "get": {
        "operationId": "v1.stadiums.all",
        "summary": "RÃ©cupÃ¨re la liste des stades sans pagination avec leurs relations\n(Ville d'appartenance, Ã©quipe propriÃ©taire et les matches qui y ont Ã©tÃ© jouÃ©s)",
        "tags": [
          "StadiumListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "stadiums": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StadiumSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "stadiums"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Stades rÃ©cupÃ©rÃ©s avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/staffs": {
      "post": {
        "operationId": "v1.create",
        "tags": [
          "StaffCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffStoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "staff": {
                          "$ref": "#/components/schemas/Staff"
                        }
                      },
                      "required": [
                        "staff"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.list",
        "tags": [
          "StaffListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "staffs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StaffResources"
                          }
                        }
                      },
                      "required": [
                        "staffs"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/staffs/{id}": {
      "delete": {
        "operationId": "v1.delete",
        "tags": [
          "StaffDeleting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Staff deleted successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.detail",
        "tags": [
          "StaffDetail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "staff": {
                          "$ref": "#/components/schemas/StaffResources"
                        }
                      },
                      "required": [
                        "staff"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "v1.update",
        "tags": [
          "StaffUpdating"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffStoreFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Staff updated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}/assign-category/{categoryId}": {
      "post": {
        "operationId": "v1.teams.assign-category",
        "tags": [
          "TeamAssigningToCategory"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "$ref": "#/components/schemas/TeamSummaryResource"
                            }
                          },
                          "required": [
                            "team"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team assigned to category successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/teams/{teamId}/assign-club/{clubId}": {
      "post": {
        "operationId": "v1.teams.assign-club",
        "tags": [
          "TeamAssigningToClub"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "$ref": "#/components/schemas/TeamSummaryResource"
                            }
                          },
                          "required": [
                            "team"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team assigned to club successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/teams/{id}": {
      "get": {
        "operationId": "v1.teams.show",
        "summary": "RÃ©cupÃ©rer une Ã©quipe via son identifiant",
        "tags": [
          "TeamById"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "L'identifiant de l'Ã©quipe",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "$ref": "#/components/schemas/TeamResource"
                            }
                          },
                          "required": [
                            "team"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "v1.teams.destroy",
        "summary": "Supprimer une Ã©quipe via son ID",
        "tags": [
          "TeamDeletion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'Ã©quipe Ã  supprimer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Equipe supprimÃ©e avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "v1.teams.update",
        "summary": "Mettre Ã  jour une Ã©quipe via son ID",
        "tags": [
          "TeamUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'Ã©quipe Ã  mettre Ã  jour",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "$ref": "#/components/schemas/TeamResource"
                            }
                          },
                          "required": [
                            "team"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Equipe mise Ã  jour avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/team-categories": {
      "post": {
        "operationId": "v1.team-categories.create",
        "summary": "Handle the incoming request",
        "tags": [
          "TeamCategoryCreating"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTeamCategoryFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team_category": {
                              "$ref": "#/components/schemas/TeamCategorySummaryResource"
                            }
                          },
                          "required": [
                            "team_category"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team category created successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.team-categories.list",
        "tags": [
          "TeamCategoryListing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team_categories": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TeamCategorySummaryResource"
                              }
                            }
                          },
                          "required": [
                            "team_categories"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team categories retrieved successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/team-categories/{id}": {
      "get": {
        "operationId": "v1.team-categories.detail",
        "tags": [
          "TeamCategoryDetail"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team_category": {
                          "$ref": "#/components/schemas/TeamCategoryResource"
                        }
                      },
                      "required": [
                        "team_category"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Team category retrieved successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "v1.team-categories.update",
        "tags": [
          "TeamCategoryUpdating"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamCategoryFromRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team_category": {
                              "$ref": "#/components/schemas/TeamCategorySummaryResource"
                            }
                          },
                          "required": [
                            "team_category"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team category updated successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/team-categories/pagination": {
      "get": {
        "operationId": "v1.team-categories.pagination",
        "tags": [
          "TeamCategoryPagination"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "column",
            "in": "query",
            "schema": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "team_categories": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/TeamCategorySummaryResource"
                              }
                            }
                          },
                          "required": [
                            "team_categories"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Team categories retrieved successfully"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/teams": {
      "post": {
        "operationId": "v1.teams.store",
        "summary": "CrÃ©er une Ã©quipe",
        "tags": [
          "TeamCreation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreTeamRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team": {
                          "$ref": "#/components/schemas/TeamResource"
                        }
                      },
                      "required": [
                        "team"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Equipe crÃ©Ã©e avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "get": {
        "operationId": "v1.teams.index",
        "summary": "RÃ©cupÃ©rer une liste paginÃ©e des Ã©quipes",
        "tags": [
          "TeamPaginated"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/teams/{teamId}/attach-league": {
      "post": {
        "operationId": "v1.teams.attach-league",
        "summary": "RÃ©cupÃ©rer la liste des Ã©quipes sans pagination",
        "tags": [
          "TeamLeagueAttach"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "league_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "league_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Ãquipe liÃ©e Ã  la ligue avec succÃ¨s."
                      ]
                    },
                    "team": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "team"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/teams/{teamId}/detach-league": {
      "post": {
        "operationId": "v1.teams.detach-league",
        "summary": "RÃ©cupÃ©rer la liste des Ã©quipes sans pagination",
        "tags": [
          "TeamLeagueDetach"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "Liaison supprimÃ©e avec succÃ¨s."
                          ]
                        },
                        "team": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "message",
                        "team"
                      ]
                    },
                    "message": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Une erreur est survenue lors de la suppression de la liaison."
                      ]
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}/switch": {
      "post": {
        "operationId": "v1.teams.switch-league",
        "summary": "RÃ©cupÃ©rer la liste des Ã©quipes sans pagination",
        "tags": [
          "TeamLeagueSwitch"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "league_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "league_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Liaison modifiÃ©e avec succÃ¨s."
                      ]
                    },
                    "team": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "team"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "errors": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "maxItems": 0,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "status",
                        "message",
                        "errors"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "enum": [
                            "L'Ã©quipe est dÃ©jÃ  liÃ©e Ã  cette ligue."
                          ]
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/teams/all": {
      "get": {
        "operationId": "v1.teams.all",
        "summary": "RÃ©cupÃ©rer la liste des Ã©quipes sans pagination",
        "tags": [
          "TeamListing"
        ],
        "responses": {
          "200": {
            "description": "dd($teams);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "teams": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TeamSummaryResource"
                          }
                        }
                      },
                      "required": [
                        "teams"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Equipes rÃ©cupÃ©rÃ©es avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/v1/teams/{team}/matches": {
      "get": {
        "operationId": "v1.teams.matches",
        "summary": "RÃ©cupÃ©rer la liste des matchs d'une Ã©quipe",
        "tags": [
          "TeamMatches"
        ],
        "parameters": [
          {
            "name": "team",
            "in": "path",
            "required": true,
            "description": "ID de l'Ã©quipe",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pool_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stadium_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match_day_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Liste des matchs rÃ©cupÃ©rÃ©e avec succÃ¨s"
                              ]
                            },
                            "data": {
                              "type": "object"
                            }
                          },
                          "required": [
                            "success",
                            "message",
                            "data"
                          ]
                        },
                        "message": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/v1/teams/{teamId}/players": {
      "get": {
        "operationId": "v1.teams.players",
        "tags": [
          "TeamPlayers"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "players": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PlayerMininualResource"
                          }
                        }
                      },
                      "required": [
                        "players"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}/reactivate": {
      "put": {
        "operationId": "v1.teams.reactivate",
        "tags": [
          "TeamReactivate"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team": {
                          "$ref": "#/components/schemas/TeamSummaryResource"
                        }
                      },
                      "required": [
                        "team"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Team reactivated successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}/staffs": {
      "get": {
        "operationId": "v1.teams.staffs",
        "tags": [
          "TeamStaffs"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dd($staffs);",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "staffs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TeamStaffResource"
                          }
                        }
                      },
                      "required": [
                        "staffs"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}/suspend": {
      "put": {
        "operationId": "v1.teams.suspend",
        "tags": [
          "TeamSuspense"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspensionFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "team": {
                          "$ref": "#/components/schemas/TeamSummaryResource"
                        }
                      },
                      "required": [
                        "team"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Team suspended successfully"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "operationId": "v1.users.create",
        "summary": "Permettre Ã  un administrateur de crÃ©Ã©r le compte d'un utilisateur",
        "tags": [
          "UserCreate"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Compte crÃ©Ã© avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.users.index",
        "summary": "Permettre une pagination de la liste des utilisateurs",
        "tags": [
          "UserPaginate"
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "string"
                        },
                        "total": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "current_page",
                        "per_page",
                        "total",
                        "last_page",
                        "from",
                        "to"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "meta",
                    "links",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{slug}": {
      "delete": {
        "operationId": "v1.users.delete",
        "tags": [
          "UserDeleteCrontroller"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Compte supprimÃ© avec succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.users.show",
        "summary": "RÃ©cupÃ©rer un utilisateur par son slug",
        "tags": [
          "UserFindBySlug"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/App.Modules.User.Http.Resources.User.UserResource"
                            }
                          },
                          "required": [
                            "user"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "succÃ¨s"
                          ]
                        }
                      },
                      "required": [
                        "status",
                        "data",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/invitation/resend": {
      "post": {
        "operationId": "v1.userInvitation",
        "summary": "RÃ©Ã©mettre une invitation utilisateur",
        "tags": [
          "UserInvitation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Nouvelle invitation envoyÃ©e avec succÃ¨s."
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/confirm-invitation": {
      "post": {
        "operationId": "v1.userInvitationConfirm",
        "summary": "Confirme une invitation utilisateur et dÃ©finit son mot de passe",
        "tags": [
          "UserInvitationConfirm"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "token",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Invitation confirmÃ©e avec succÃ¨s. Vous pouvez maintenant vous connecter."
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "put": {
        "operationId": "v1.users.update",
        "summary": "Permettre Ã  un administrateur de mettre Ã  jour les informations d'un utilisateur",
        "tags": [
          "UserUpdate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Utilisateur mis Ã  jour avec succÃ¨s"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "App.Modules.Authorization.Http.Resources.PermissionResource": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "slug",
          "name"
        ],
        "title": "App.Modules.Authorization.Http.Resources.PermissionResource"
      },
      "App.Modules.Authorization.Http.Resources.RoleResource": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.PermissionResource"
            }
          }
        },
        "required": [
          "slug",
          "name"
        ],
        "title": "App.Modules.Authorization.Http.Resources.RoleResource"
      },
      "App.Modules.OfficialReport.Http.Resources.MatchResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_one_final_score": {
            "type": "string"
          },
          "team_two_final_score": {
            "type": "string"
          },
          "team_one_half_time_score": {
            "type": "string"
          },
          "team_two_half_time_score": {
            "type": "string"
          },
          "has_extra_time": {
            "type": "string"
          },
          "team_one_extra_time_score": {
            "type": "string"
          },
          "team_two_extra_time_score": {
            "type": "string"
          },
          "has_penalties": {
            "type": "string"
          },
          "team_one_penalty_score": {
            "type": "string"
          },
          "team_two_penalty_score": {
            "type": "string"
          },
          "score_line": {
            "type": "string",
            "description": "MÃ©thodes utilitaires"
          },
          "winner": {
            "type": "string"
          },
          "is_draw": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "team_one_final_score",
          "team_two_final_score",
          "team_one_half_time_score",
          "team_two_half_time_score",
          "has_extra_time",
          "team_one_extra_time_score",
          "team_two_extra_time_score",
          "has_penalties",
          "team_one_penalty_score",
          "team_two_penalty_score",
          "score_line",
          "winner",
          "is_draw",
          "created_at",
          "updated_at"
        ],
        "title": "App.Modules.OfficialReport.Http.Resources.MatchResultResource"
      },
      "App.Modules.User.Http.Resources.User.UserResource": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_coach": {
            "type": "string"
          },
          "is_official": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App.Modules.Authorization.Http.Resources.RoleResource"
            }
          }
        },
        "required": [
          "slug",
          "last_name",
          "first_name",
          "email",
          "is_coach",
          "is_official",
          "is_active"
        ],
        "title": "App.Modules.User.Http.Resources.User.UserResource"
      },
      "AssignmentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "official_id": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "assigned_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "official_id",
          "match_id",
          "role",
          "assigned_at"
        ],
        "title": "AssignmentResource"
      },
      "AssistantRefereeEvaluationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "assistant_number": {
            "type": "string"
          },
          "referee_id": {
            "type": "string"
          },
          "law_interpretation_score": {
            "type": "string"
          },
          "law_interpretation_remarks": {
            "type": "string"
          },
          "physical_condition_score": {
            "type": "string"
          },
          "physical_condition_remarks": {
            "type": "string"
          },
          "collaboration_score": {
            "type": "string"
          },
          "collaboration_remarks": {
            "type": "string"
          },
          "coefficient": {
            "type": "string"
          },
          "total_points": {
            "type": "string"
          },
          "referee": {
            "type": "object",
            "description": "Relation conditionnelle",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "assistant_number",
          "referee_id",
          "law_interpretation_score",
          "law_interpretation_remarks",
          "physical_condition_score",
          "physical_condition_remarks",
          "collaboration_score",
          "collaboration_remarks",
          "coefficient",
          "total_points",
          "created_at",
          "updated_at"
        ],
        "title": "AssistantRefereeEvaluationResource"
      },
      "CallupPlayerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "callup_id": {
            "type": "string"
          },
          "player_id": {
            "type": "string"
          },
          "jersey_number": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "is_starter": {
            "type": "string"
          },
          "substitute_order": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "preferred_position": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "Titulaire",
              "RemplaÃ§ant"
            ]
          }
        },
        "required": [
          "id",
          "callup_id",
          "player_id",
          "jersey_number",
          "position",
          "is_starter",
          "substitute_order",
          "created_at",
          "updated_at",
          "first_name",
          "last_name",
          "photo",
          "preferred_position",
          "date_of_birth",
          "nationality",
          "role"
        ],
        "title": "CallupPlayerResource"
      },
      "CallupRequest": {
        "type": "object",
        "properties": {
          "match_id": {
            "type": "string",
            "format": "uuid",
            "description": "Partie crÃ©ation (obligatoire)"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "coach_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "formation": {
            "type": [
              "string",
              "null"
            ],
            "description": "Partie formation/capitaine (optionnelle)",
            "enum": [
              "4-4-2",
              "4-3-3",
              "3-5-2",
              "4-2-3-1",
              "3-4-3"
            ]
          },
          "captain_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "finalize": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Finalisation (optionnelle)"
          },
          "players": {
            "type": [
              "array",
              "null"
            ],
            "description": "Partie joueurs (optionnelle)",
            "items": {
              "type": "object",
              "properties": {
                "player_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "jersey_number": {
                  "type": "integer"
                },
                "position": {
                  "type": "string",
                  "enum": [
                    "GOALKEEPER",
                    "DEFENSE",
                    "MIDFIELD",
                    "ATTACK"
                  ]
                },
                "is_starter": {
                  "type": "boolean"
                },
                "substitute_order": {
                  "type": [
                    "integer",
                    "null"
                  ]
                }
              }
            },
            "minItems": 11,
            "maxItems": 23
          }
        },
        "required": [
          "match_id",
          "team_id"
        ],
        "title": "CallupRequest"
      },
      "CityResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "CityResource"
      },
      "ClubResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "founded_year": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "contact_info": {
            "type": "string"
          },
          "responsable": {
            "type": "string"
          },
          "sanctions": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamSummaryResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "founded_year",
          "status",
          "logo",
          "contact_info",
          "responsable",
          "sanctions",
          "created_at",
          "updated_at"
        ],
        "title": "ClubResource"
      },
      "ClubSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "founded_year": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "founded_year",
          "status",
          "logo"
        ],
        "title": "ClubSummaryResource"
      },
      "ClubWithTeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamSummaryResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "status",
          "logo"
        ],
        "title": "ClubWithTeamResource"
      },
      "CreateEventRequest": {
        "type": "object",
        "properties": {
          "match_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "GOAL",
              "CARD",
              "SUBSTITUTION"
            ]
          },
          "minute": {
            "type": "integer",
            "minimum": 0,
            "maximum": 120
          },
          "stoppage": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "second_player_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "details": {
            "type": "object",
            "properties": {
              "goal_type": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "REGULAR",
                  "PENALTY",
                  "OWN_GOAL",
                  "FREE_KICK"
                ]
              },
              "card_type": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "YELLOW",
                  "RED"
                ]
              },
              "card_reason": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 255
              }
            }
          }
        },
        "required": [
          "match_id",
          "type",
          "minute",
          "player_id",
          "team_id"
        ],
        "title": "CreateEventRequest"
      },
      "CreateMatchResultRequest": {
        "type": "object",
        "description": "Summary of CreateMatchResultRequest",
        "properties": {
          "match_id": {
            "type": "string",
            "format": "uuid"
          },
          "home_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "away_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "halftime_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "halftime_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "result_type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "EXTRA_TIME",
              "PENALTIES"
            ]
          }
        },
        "required": [
          "match_id",
          "home_score",
          "away_score",
          "result_type"
        ],
        "title": "CreateMatchResultRequest"
      },
      "CreateMatchResultRequestFull": {
        "type": "object",
        "description": "Summary of CreateMatchResultRequestFull",
        "properties": {
          "match_id": {
            "type": "string",
            "format": "uuid",
            "description": "--- RÃ©sultat du match ---"
          },
          "home_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "away_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "halftime_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "halftime_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "result_type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "EXTRA_TIME",
              "PENALTIES"
            ]
          },
          "events": {
            "type": [
              "array",
              "null"
            ],
            "description": "--- ÃvÃ¨nements du match (array dâÃ©vÃ©nements) ---",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "GOAL",
                    "CARD",
                    "SUBSTITUTION"
                  ]
                },
                "minute": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 120
                },
                "stoppage": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "player_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "second_player_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "uuid"
                },
                "team_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "details": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "goal_type": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "REGULAR",
                        "PENALTY",
                        "OWN_GOAL",
                        "FREE_KICK"
                      ]
                    },
                    "card_type": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "YELLOW",
                        "RED"
                      ]
                    },
                    "card_reason": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 255
                    }
                  }
                }
              },
              "required": [
                "type",
                "minute",
                "player_id",
                "team_id"
              ]
            }
          }
        },
        "required": [
          "match_id",
          "home_score",
          "away_score",
          "result_type"
        ],
        "title": "CreateMatchResultRequestFull"
      },
      "CreateSeasonAndPoolsRequest": {
        "type": "object",
        "properties": {
          "league_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "pools": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "teams_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2
                },
                "stadiums_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "minItems": 1
                },
                "match_start_time": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date"
                },
                "allowed_match_days": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday",
                      "Sunday"
                    ]
                  },
                  "minItems": 1
                },
                "min_hours_between_team_matches": {
                  "type": "integer",
                  "minimum": 48
                },
                "min_days_between_phases": {
                  "type": "integer",
                  "minimum": 1
                },
                "skip_dates": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "first_leg_start": {
                  "type": "string",
                  "format": "date-time"
                },
                "first_leg_end": {
                  "type": "string",
                  "format": "date-time"
                },
                "second_leg_start": {
                  "type": "string",
                  "format": "date-time"
                },
                "second_leg_end": {
                  "type": "string",
                  "format": "date-time"
                },
                "cities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "min": {
                        "type": "integer",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "id",
                      "min"
                    ]
                  }
                },
                "derbies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "team_one_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "team_two_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "first_leg_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "first_leg_stadium_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "second_leg_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "second_leg_stadium_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "teams_ids",
                "stadiums_ids",
                "allowed_match_days",
                "min_hours_between_team_matches",
                "first_leg_start",
                "first_leg_end"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "league_id",
          "start_date",
          "pools"
        ],
        "title": "CreateSeasonAndPoolsRequest"
      },
      "DisciplinarySanctionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "player_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "jersey_number": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "license_number": {
            "type": "string"
          },
          "player_name": {
            "type": "string"
          },
          "minute": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "player_id",
          "team_id",
          "type",
          "jersey_number",
          "team",
          "license_number",
          "player_name",
          "minute",
          "reason",
          "created_at",
          "updated_at"
        ],
        "title": "DisciplinarySanctionResource"
      },
      "FootballMatchCalendarResource": {
        "type": "object",
        "properties": {
          "football_match_id": {
            "type": "string",
            "description": "dd($this),"
          },
          "team1_id": {
            "type": "string"
          },
          "team1": {
            "type": "string"
          },
          "team1_logo": {
            "type": "string"
          },
          "team2_id": {
            "type": "string"
          },
          "team2": {
            "type": "string"
          },
          "team2_logo": {
            "type": "string"
          },
          "stadium_id": {
            "type": "string"
          },
          "stadium": {
            "type": "string"
          },
          "match_date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "is_derby": {
            "type": "string"
          },
          "is_rescheduled": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/MatchResultSummaryResource"
          }
        },
        "required": [
          "football_match_id",
          "team1_id",
          "team1",
          "team1_logo",
          "team2_id",
          "team2",
          "team2_logo",
          "stadium_id",
          "stadium",
          "match_date",
          "time",
          "is_derby",
          "is_rescheduled"
        ],
        "title": "FootballMatchCalendarResource"
      },
      "FootballMatchResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_one": {
            "$ref": "#/components/schemas/TeamResource"
          },
          "team_two": {
            "$ref": "#/components/schemas/TeamResource"
          },
          "stadium": {
            "$ref": "#/components/schemas/StadiumResource"
          },
          "match_day": {
            "$ref": "#/components/schemas/MatchDaySummaryResource"
          },
          "scheduled_at": {
            "type": "string"
          },
          "leg": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/MatchResultResource"
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficialSummaryResource"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchEventResource"
            }
          },
          "team_one_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchEventResource"
            }
          },
          "team_two_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchEventResource"
            }
          },
          "team_one_callup": {
            "$ref": "#/components/schemas/PlayersCallupResource"
          },
          "team_two_callup": {
            "$ref": "#/components/schemas/PlayersCallupResource"
          }
        },
        "required": [
          "id",
          "team_one",
          "team_two",
          "stadium",
          "match_day",
          "scheduled_at",
          "leg",
          "team_one_callup",
          "team_two_callup"
        ],
        "title": "FootballMatchResource"
      },
      "FootballMatchSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_date": {
            "type": "string"
          },
          "match_day": {
            "type": "string"
          },
          "team_one": {
            "type": "string"
          },
          "team_two": {
            "type": "string"
          },
          "stadium": {
            "type": "string"
          },
          "scheduled_at": {
            "type": "string"
          },
          "leg": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "match_date",
          "match_day",
          "team_one",
          "team_two",
          "stadium",
          "scheduled_at",
          "leg"
        ],
        "title": "FootballMatchSummaryResource"
      },
      "FourthOfficialEvaluationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "referee_id": {
            "type": "string"
          },
          "technical_area_control_score": {
            "type": "string"
          },
          "technical_area_control_remarks": {
            "type": "string"
          },
          "substitution_management_score": {
            "type": "string"
          },
          "substitution_management_remarks": {
            "type": "string"
          },
          "coefficient": {
            "type": "string"
          },
          "total_points": {
            "type": "string"
          },
          "referee": {
            "type": "object",
            "description": "Relation conditionnelle",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "referee_id",
          "technical_area_control_score",
          "technical_area_control_remarks",
          "substitution_management_score",
          "substitution_management_remarks",
          "coefficient",
          "total_points",
          "created_at",
          "updated_at"
        ],
        "title": "FourthOfficialEvaluationResource"
      },
      "JerseyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "club": {
            "$ref": "#/components/schemas/ClubSummaryResource"
          },
          "primary_color": {
            "type": "string"
          },
          "secondary_color": {
            "type": "string"
          },
          "tertiary_color": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "primary_color",
          "secondary_color",
          "tertiary_color",
          "created_at",
          "updated_at"
        ],
        "title": "JerseyResource"
      },
      "JerseyStoreFormRequest": {
        "type": "object",
        "properties": {
          "club_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "home",
              "away",
              "third"
            ]
          },
          "primary_color": {
            "type": "string"
          },
          "secondary_color": {
            "type": "string"
          },
          "tertiary_color": {
            "type": "string"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "club_id",
          "type",
          "primary_color",
          "secondary_color",
          "tertiary_color"
        ],
        "title": "JerseyStoreFormRequest"
      },
      "JerseySummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "club": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "primary_color": {
            "type": "string"
          },
          "secondary_color": {
            "type": "string"
          },
          "tertiary_color": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "team",
          "club",
          "type",
          "primary_color",
          "secondary_color",
          "tertiary_color"
        ],
        "title": "JerseySummaryResource"
      },
      "JerseyUpdatingFormRequest": {
        "type": "object",
        "properties": {
          "club_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "home",
              "away",
              "third"
            ]
          },
          "primary_color": {
            "type": "string"
          },
          "secondary_color": {
            "type": "string"
          },
          "tertiary_color": {
            "type": "string"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "JerseyUpdatingFormRequest"
      },
      "LeagueResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "teams_count": {
            "type": "string"
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeasonSummaryResource"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamSummaryResource"
            }
          },
          "pools_count": {
            "type": "string"
          },
          "pools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PoolsRessource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "logo",
          "teams_count",
          "pools_count"
        ],
        "title": "LeagueResource"
      },
      "LeagueSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "teams_count": {
            "type": "string"
          },
          "pools_count": {
            "type": "string"
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeasonSummaryResource"
            }
          },
          "teams_ids": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "logo",
          "teams_count",
          "pools_count",
          "teams_ids"
        ],
        "title": "LeagueSummaryResource"
      },
      "LoginRequest": {
        "type": "object",
        "description": "Summary of LoginRequest",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 255
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MainRefereeEvaluationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "referee_id": {
            "type": "string"
          },
          "match_control_score": {
            "type": "string"
          },
          "match_control_remarks": {
            "type": "string"
          },
          "physical_condition_score": {
            "type": "string"
          },
          "physical_condition_remarks": {
            "type": "string"
          },
          "personality_score": {
            "type": "string"
          },
          "personality_remarks": {
            "type": "string"
          },
          "collaboration_score": {
            "type": "string"
          },
          "collaboration_remarks": {
            "type": "string"
          },
          "coefficient": {
            "type": "string"
          },
          "total_points": {
            "type": "string"
          },
          "referee": {
            "type": "object",
            "description": "Relation conditionnelle",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "referee_id",
          "match_control_score",
          "match_control_remarks",
          "physical_condition_score",
          "physical_condition_remarks",
          "personality_score",
          "personality_remarks",
          "collaboration_score",
          "collaboration_remarks",
          "coefficient",
          "total_points",
          "created_at",
          "updated_at"
        ],
        "title": "MainRefereeEvaluationResource"
      },
      "MatchCallUpsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_one_callup": {
            "$ref": "#/components/schemas/PlayersCallupResource"
          },
          "team_two_callup": {
            "$ref": "#/components/schemas/PlayersCallupResource"
          }
        },
        "required": [
          "id",
          "team_one_callup",
          "team_two_callup"
        ],
        "title": "MatchCallUpsResource"
      },
      "MatchDayCalendarResource": {
        "type": "object",
        "properties": {
          "match_day_id": {
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "1Ã¨re JournÃ©e",
                  "2e JournÃ©e",
                  "3e JournÃ©e"
                ]
              }
            ]
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FootballMatchCalendarResource"
            }
          }
        },
        "required": [
          "match_day_id",
          "label",
          "start_date",
          "end_date"
        ],
        "title": "MatchDayCalendarResource"
      },
      "MatchDaySummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "1Ã¨re JournÃ©e",
                  "2e JournÃ©e",
                  "3e JournÃ©e"
                ]
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "label",
          "status",
          "start_date",
          "end_date"
        ],
        "title": "MatchDaySummaryResource"
      },
      "MatchEvaluationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "difficulty_level": {
            "type": "string"
          },
          "team_one_attitude": {
            "type": "string"
          },
          "team_two_attitude": {
            "type": "string"
          },
          "public_attitude": {
            "type": "string"
          },
          "field_condition": {
            "type": "string"
          },
          "organization_observation": {
            "type": "string"
          },
          "general_organization": {
            "type": "string"
          },
          "control_service": {
            "type": "string"
          },
          "police_service": {
            "type": "string"
          },
          "medical_service": {
            "type": "string"
          },
          "press_service": {
            "type": "string"
          },
          "spectator_count": {
            "type": "string"
          },
          "incidents_or_remarks": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "difficulty_level",
          "team_one_attitude",
          "team_two_attitude",
          "public_attitude",
          "field_condition",
          "organization_observation",
          "general_organization",
          "control_service",
          "police_service",
          "medical_service",
          "press_service",
          "spectator_count",
          "incidents_or_remarks",
          "created_at",
          "updated_at"
        ],
        "title": "MatchEvaluationResource"
      },
      "MatchEventResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "player_id": {
            "type": "string"
          },
          "player_name": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/PlayerCallupResource"
          },
          "secondary_player_id": {
            "type": "string"
          },
          "secondary_player_name": {
            "type": "string"
          },
          "secondary_player": {
            "$ref": "#/components/schemas/PlayerCallupResource"
          },
          "team_id": {
            "type": "string"
          },
          "team_name": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "minute": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "player_id",
          "player_name",
          "secondary_player_id",
          "secondary_player_name",
          "team_id",
          "team_name",
          "match_id",
          "minute",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "MatchEventResource"
      },
      "MatchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "home_score": {
            "type": "integer"
          },
          "away_score": {
            "type": "integer"
          },
          "halftime_home_score": {
            "type": "integer"
          },
          "halftime_away_score": {
            "type": "integer"
          },
          "extra_time_home_score": {
            "type": [
              "integer",
              "null"
            ]
          },
          "extra_time_away_score": {
            "type": [
              "integer",
              "null"
            ]
          },
          "penalty_home_score": {
            "type": [
              "integer",
              "null"
            ]
          },
          "penalty_away_score": {
            "type": [
              "integer",
              "null"
            ]
          },
          "winner_club_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "result_type": {
            "type": "string"
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time"
          },
          "recorded_by": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "match_id",
          "home_score",
          "away_score",
          "halftime_home_score",
          "halftime_away_score",
          "extra_time_home_score",
          "extra_time_away_score",
          "penalty_home_score",
          "penalty_away_score",
          "winner_club_id",
          "result_type",
          "recorded_at",
          "recorded_by",
          "verified",
          "created_at",
          "updated_at"
        ],
        "title": "MatchResult"
      },
      "MatchResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "home_score": {
            "type": "string"
          },
          "away_score": {
            "type": "string"
          },
          "halftime_home_score": {
            "type": "string"
          },
          "halftime_away_score": {
            "type": "string"
          },
          "extra_time_home_score": {
            "type": "string"
          },
          "extra_time_away_score": {
            "type": "string"
          },
          "penalty_home_score": {
            "type": "string"
          },
          "penalty_away_score": {
            "type": "string"
          },
          "result_type": {
            "type": "string"
          },
          "verified": {
            "type": "string"
          },
          "recorded_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "match": {
            "description": "Relations",
            "$ref": "#/components/schemas/FootballMatchSummaryResource"
          },
          "winner_club": {
            "$ref": "#/components/schemas/TeamSummaryResource"
          },
          "recorded_by": {
            "$ref": "#/components/schemas/UserResource"
          },
          "is_draw": {
            "type": "string",
            "description": "Computed properties"
          },
          "final_score": {
            "type": "string"
          },
          "halftime_score": {
            "type": "string"
          },
          "result_summary": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "home_score": {
                "type": "string"
              },
              "away_score": {
                "type": "string"
              },
              "winner_type": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "is_decided": {
                "type": "boolean"
              }
            },
            "required": [
              "type",
              "home_score",
              "away_score",
              "winner_type",
              "is_decided"
            ]
          }
        },
        "required": [
          "id",
          "home_score",
          "away_score",
          "halftime_home_score",
          "halftime_away_score",
          "extra_time_home_score",
          "extra_time_away_score",
          "penalty_home_score",
          "penalty_away_score",
          "result_type",
          "verified",
          "recorded_at",
          "created_at",
          "updated_at",
          "is_draw",
          "final_score",
          "halftime_score",
          "result_summary"
        ],
        "title": "MatchResultResource"
      },
      "MatchResultSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "home_score": {
            "type": "string"
          },
          "away_score": {
            "type": "string"
          },
          "result_type": {
            "type": "string"
          },
          "verified": {
            "type": "string"
          },
          "recorded_at": {
            "type": "string"
          },
          "match_summary": {
            "type": "object",
            "description": "Informations essentielles du match",
            "properties": {
              "id": {
                "type": "string"
              },
              "home_club": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "away_club": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "match_date": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "home_club",
              "away_club",
              "match_date"
            ]
          },
          "winner": {
            "type": "object",
            "description": "Informations du vainqueur",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "decisive_score": {
            "type": "object",
            "description": "Score final selon le type de rÃ©sultat",
            "properties": {
              "home": {
                "type": "string"
              },
              "away": {
                "type": "string"
              }
            },
            "required": [
              "home",
              "away"
            ]
          },
          "is_draw": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "home_score",
          "away_score",
          "result_type",
          "verified",
          "recorded_at",
          "decisive_score",
          "is_draw"
        ],
        "title": "MatchResultSummaryResource"
      },
      "OfficialAssignFormRequest": {
        "type": "object",
        "description": "Summary of OfficialAssignFormRequest",
        "properties": {
          "official_id": {
            "type": "string",
            "format": "uuid"
          },
          "match_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 100
          }
        },
        "required": [
          "official_id",
          "match_id"
        ],
        "title": "OfficialAssignFormRequest"
      },
      "OfficialMatchResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "competition": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "type"
            ]
          },
          "seasonId": {
            "type": "string"
          },
          "homeTeam": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "logo"
            ]
          },
          "awayTeam": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "logo"
            ]
          },
          "stadium": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "null"
              }
            },
            "required": [
              "id",
              "name",
              "address"
            ]
          },
          "scheduledAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "score": {
            "type": "object",
            "properties": {
              "home": {
                "type": "string"
              },
              "away": {
                "type": "string"
              }
            },
            "required": [
              "home",
              "away"
            ]
          },
          "phase": {
            "type": "string"
          },
          "officialRole": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "UNASSIGNED"
                ]
              }
            ]
          },
          "assignedAt": {
            "type": "string"
          },
          "otherOfficials": {
            "type": "string"
          },
          "reports": {
            "type": "string"
          },
          "incidents": {
            "type": "string"
          },
          "events": {
            "type": "string"
          },
          "canSubmitReport": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "reportSubmitted": {
            "type": "string"
          },
          "matchClosed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "required": [
          "id",
          "number",
          "competition",
          "seasonId",
          "homeTeam",
          "awayTeam",
          "stadium",
          "scheduledAt",
          "status",
          "phase",
          "officialRole",
          "assignedAt",
          "otherOfficials",
          "reports",
          "incidents",
          "events",
          "canSubmitReport",
          "reportSubmitted",
          "matchClosed"
        ],
        "title": "OfficialMatchResource"
      },
      "OfficialReportResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "official_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "submitted_at": {
            "type": "string"
          },
          "reviewed_at": {
            "type": "string"
          },
          "review_notes": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "is_draft": {
            "type": "string",
            "description": "Statuts et permissions"
          },
          "is_submitted": {
            "type": "string"
          },
          "is_reviewed": {
            "type": "string"
          },
          "can_edit": {
            "type": "string"
          },
          "can_submit": {
            "type": "string"
          },
          "can_review": {
            "type": "string"
          },
          "is_complete": {
            "type": "string"
          },
          "match": {
            "type": "object",
            "description": "Relations conditionnelles",
            "properties": {
              "id": {
                "type": "string"
              },
              "date": {
                "type": "string"
              },
              "venue": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "date",
              "venue"
            ]
          },
          "official": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "role"
            ]
          },
          "match_result": {
            "description": "DonnÃ©es du rapport",
            "$ref": "#/components/schemas/App.Modules.OfficialReport.Http.Resources.MatchResultResource"
          },
          "match_evaluation": {
            "$ref": "#/components/schemas/MatchEvaluationResource"
          },
          "sanctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisciplinarySanctionResource"
            }
          },
          "main_referee_evaluation": {
            "$ref": "#/components/schemas/MainRefereeEvaluationResource"
          },
          "assistant_evaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistantRefereeEvaluationResource"
            }
          },
          "fourth_official_evaluation": {
            "$ref": "#/components/schemas/FourthOfficialEvaluationResource"
          }
        },
        "required": [
          "id",
          "match_id",
          "official_id",
          "status",
          "submitted_at",
          "reviewed_at",
          "review_notes",
          "created_at",
          "updated_at",
          "is_draft",
          "is_submitted",
          "is_reviewed",
          "can_edit",
          "can_submit",
          "can_review",
          "is_complete"
        ],
        "title": "OfficialReportResource"
      },
      "OfficialStoreFormRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 255
          },
          "last_name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "maxLength": 255
          },
          "official_type": {
            "type": [
              "string",
              "null"
            ],
            "description": "\"birth_place\"       => \"nullable|string|max:255\",\n\"nationality\"       => \"nullable|string|max:100\",",
            "enum": [
              "REFEREE",
              "COMMISSIONER"
            ]
          },
          "license_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "level": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "REGIONAL",
              "NATIONAL",
              "INTERNATIONAL"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "ACTIVE",
              "SUSPENDED",
              "RETIRED"
            ]
          },
          "certification_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "certification_expiry": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "structure": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "experience": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          }
        },
        "required": [
          "first_name",
          "last_name"
        ],
        "title": "OfficialStoreFormRequest"
      },
      "OfficialSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "description": "\"first_name\" => $this->first_name,\n\"last_name\" => $this->last_name,\n\"date_of_birth\" => $this->date_of_birth,\n\"birth_place\" => $this->birth_place,\n\"nationality\" => $this->nationality,",
            "$ref": "#/components/schemas/UserSummarizeResource"
          },
          "official_type": {
            "type": "string"
          },
          "license_number": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_label": {
            "type": "string"
          },
          "certification_date": {
            "type": "string"
          },
          "certification_expiry": {
            "type": "string"
          },
          "structure": {
            "type": "string"
          },
          "experience": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "specializations": {
            "type": "array",
            "description": "Relations Ã©ventuelles\n\"specializations\" => $this->whenLoaded(\"specializations\", function () {\nreturn $this->specializations->map(function ($spec) {\nreturn [\n\"type\" => $spec->type,\n\"certified_at\" => $spec->certified_at,\n\"level\" => $spec->level,\n];\n});\n}),\n\"assignments\" => $this->whenLoaded(\"assignments\", function () {\nreturn $this->assignments->map(function ($assignment) {\nreturn [\n\"id\" => $assignment->id,\n\"match_id\" => $assignment->match_id,\n\"role\" => $assignment->role,\n\"assigned_at\" => $assignment->assigned_at,\n];\n});\n}),\n\"reports\" => $this->whenLoaded(\"reports\", function () {\nreturn $this->reports->map(function ($report) {\nreturn [\n\"id\" => $report->id,\n\"match_id\" => $report->match_id,\n\"content\" => $report->content,\n\"submitted_at\" => $report->submitted_at,\n];\n});\n}),\n\"statistics\" => $this->whenLoaded(\"statistics\", function () {\nreturn [\n\"matches_officiated\" => $this->statistics->matches_officiated ?? 0,\n\"red_cards\" => $this->statistics->red_cards ?? 0,\n\"yellow_cards\" => $this->statistics->yellow_cards ?? 0,\n];\n}),",
            "items": {
              "$ref": "#/components/schemas/SpecializationResource"
            }
          },
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentResource"
            }
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportResource"
            }
          },
          "statistics": {
            "$ref": "#/components/schemas/StatisticsResource"
          }
        },
        "required": [
          "id",
          "official_type",
          "license_number",
          "level",
          "status",
          "status_label",
          "certification_date",
          "certification_expiry",
          "structure",
          "experience",
          "role"
        ],
        "title": "OfficialSummaryResource"
      },
      "OfficialUpdatingFormRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "maxLength": 255
          },
          "official_type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "REFEREE",
              "COMMISSIONER"
            ]
          },
          "level": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "REGIONAL",
              "NATIONAL",
              "INTERNATIONAL"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "ACTIVE",
              "SUSPENDED",
              "RETIRED"
            ]
          },
          "certification_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "certification_expiry": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "structure": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "experience": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          }
        },
        "title": "OfficialUpdatingFormRequest"
      },
      "PermissionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "PermissionResource"
      },
      "PhaseResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "Phase Aller",
              "Phase Retour"
            ]
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "matchdays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchDayCalendarResource"
            }
          }
        },
        "required": [
          "name",
          "start",
          "end",
          "matchdays"
        ],
        "title": "PhaseResource"
      },
      "PlayerCallupResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "jersey_number": {
            "type": "string"
          },
          "position": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "jersey_number",
          "position"
        ],
        "title": "PlayerCallupResource"
      },
      "PlayerContractCreatingFormRequest": {
        "type": "object",
        "description": "Summary of PlayerContractCreatingFormRequest",
        "properties": {
          "player_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "salary_amount": {
            "type": "number"
          },
          "jersey_number": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "clauses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          }
        },
        "required": [
          "player_id",
          "team_id",
          "start_date",
          "end_date",
          "salary_amount",
          "status"
        ],
        "title": "PlayerContractCreatingFormRequest"
      },
      "PlayerContractSummuryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "player": {
            "type": "string",
            "description": "\"player_id\" => $this->player_id,"
          },
          "club": {
            "type": "string",
            "description": "\"club_id\" => $this->club_id,"
          },
          "team": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "salary_amount": {
            "type": "string"
          },
          "clauses": {
            "type": "string",
            "description": "\"currency\" => $this->currency,"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "player",
          "club",
          "team",
          "start_date",
          "end_date",
          "salary_amount",
          "clauses",
          "status"
        ],
        "title": "PlayerContractSummuryResource"
      },
      "PlayerContractUpdatingFormRequest": {
        "type": "object",
        "properties": {
          "player_id": {
            "type": "string",
            "description": "\"player_contract_id\" => \"required|string\","
          },
          "team_id": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "salary_amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "clauses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          }
        },
        "required": [
          "player_id",
          "team_id",
          "start_date",
          "end_date",
          "salary_amount",
          "status"
        ],
        "title": "PlayerContractUpdatingFormRequest"
      },
      "PlayerMininualResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "birth_place": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "license_number": {
            "type": "string"
          },
          "preferred_position": {
            "type": "string"
          },
          "jersey_number": {
            "type": "string"
          },
          "current_contract": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "jersey_number": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "jersey_number",
              "status"
            ]
          },
          "contracts": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "birth_place",
          "photo_url",
          "license_number",
          "preferred_position",
          "jersey_number"
        ],
        "title": "PlayerMininualResource"
      },
      "PlayerStoreFormRequest": {
        "type": "object",
        "description": "Summary of PlayerStoreFormRequest",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "birth_place": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "photo_url": {
            "type": "string",
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 2048
          },
          "license_number": {
            "type": "string",
            "description": "\"license_number\" => \"sometimes|string|unique:players,license_number\","
          },
          "preferred_position": {
            "type": "string",
            "enum": [
              "GOALKEEPER",
              "DEFENSE",
              "MIDFIELD",
              "ATTACK"
            ]
          },
          "height": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "blood_type": {
            "type": "string"
          },
          "foot_preference": {
            "type": "string",
            "enum": [
              "LEFT",
              "RIGHT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "career_start": {
            "type": "string",
            "format": "date-time"
          },
          "career_end": {
            "type": "string",
            "format": "date-time"
          },
          "secondary_positions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOALKEEPER",
                "DEFENSE",
                "MIDFIELD",
                "ATTACK"
              ]
            }
          },
          "emergency_contact": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "relationship": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "relationship"
              ]
            }
          }
        },
        "required": [
          "first_name",
          "last_name",
          "date_of_birth",
          "birth_place",
          "nationality"
        ],
        "title": "PlayerStoreFormRequest"
      },
      "PlayerSummuryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string"
          },
          "birth_place": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "emergency_contact": {
            "type": "string",
            "description": "\"emergency_contact\" => $this->emergency_contact,"
          },
          "height": {
            "type": "string"
          },
          "weight": {
            "type": "string"
          },
          "blood_type": {
            "type": "string"
          },
          "foot_preference": {
            "type": "string"
          },
          "license_number": {
            "type": "string"
          },
          "preferred_position": {
            "type": "string"
          },
          "career_start": {
            "type": "string"
          },
          "career_end": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "secondary_positions": {
            "type": "string"
          },
          "current_contract": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "start_date": {
                "type": "string"
              },
              "end_date": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "salary_amount": {
                "type": "string"
              },
              "team_id": {
                "type": "string"
              },
              "team_name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "start_date",
              "end_date",
              "status",
              "salary_amount",
              "team_id",
              "team_name"
            ]
          },
          "contracts": {
            "type": "string"
          },
          "team": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "date_of_birth",
          "birth_place",
          "nationality",
          "phone",
          "email",
          "photo_url",
          "emergency_contact",
          "height",
          "weight",
          "blood_type",
          "foot_preference",
          "license_number",
          "preferred_position",
          "career_start",
          "career_end",
          "status",
          "secondary_positions"
        ],
        "title": "PlayerSummuryResource"
      },
      "PlayerUpdatingFormRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "birth_place": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "photo_url": {
            "type": "string",
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 2048
          },
          "license_number": {
            "type": "string"
          },
          "preferred_position": {
            "type": "string",
            "enum": [
              "GOALKEEPER",
              "DEFENSE",
              "MIDFIELD",
              "ATTACK"
            ]
          },
          "height": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "blood_type": {
            "type": "string"
          },
          "foot_preference": {
            "type": "string",
            "enum": [
              "LEFT",
              "RIGHT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "career_start": {
            "type": "string",
            "format": "date-time"
          },
          "career_end": {
            "type": "string",
            "format": "date-time"
          },
          "secondary_positions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOALKEEPER",
                "DEFENSE",
                "MIDFIELD",
                "ATTACK"
              ]
            }
          },
          "emergency_contact": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "relationship": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "relationship"
              ]
            }
          }
        },
        "title": "PlayerUpdatingFormRequest"
      },
      "PlayersCallupResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "team_name": {
            "type": "string"
          },
          "team_logo": {
            "type": "string"
          },
          "coach_id": {
            "type": "string"
          },
          "coach_name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "formation": {
            "type": "string"
          },
          "captain_id": {
            "type": "string"
          },
          "captain_name": {
            "type": "string"
          },
          "captain_jersey_number": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "captain": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "jersey_number": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "jersey_number"
            ]
          },
          "match": {
            "type": "object",
            "description": "Relations conditionnelles",
            "properties": {
              "id": {
                "type": "string"
              },
              "home_team": {
                "type": "string"
              },
              "away_team": {
                "type": "string"
              },
              "starts_at": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "home_team",
              "away_team",
              "starts_at"
            ]
          },
          "team": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "logo"
            ]
          },
          "coach": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "players": {
            "type": "array",
            "description": "Joueurs de l'appel",
            "items": {
              "$ref": "#/components/schemas/CallupPlayerResource"
            }
          },
          "total_players": {
            "type": "string",
            "description": "'starters' => CallupPlayerResource::collection($this->whenLoaded('starters')),\n'substitutes' => CallupPlayerResource::collection($this->whenLoaded('substitutes')),\nStatistiques"
          },
          "starters_count": {
            "type": "string"
          },
          "substitutes_count": {
            "type": "string"
          },
          "is_finalized": {
            "type": "boolean",
            "description": "Ãtat de l'appel"
          },
          "can_be_edited": {
            "type": "boolean"
          },
          "is_complete": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "match_id",
          "team_id",
          "team_name",
          "team_logo",
          "coach_id",
          "coach_name",
          "status",
          "formation",
          "captain_id",
          "captain_name",
          "captain_jersey_number",
          "created_at",
          "updated_at",
          "is_finalized",
          "can_be_edited"
        ],
        "title": "PlayersCallupResource"
      },
      "Pool": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "season_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "match_start_time": {
            "type": [
              "string",
              "null"
            ]
          },
          "min_hours_between_team_matches": {
            "type": "integer"
          },
          "min_days_between_phases": {
            "type": "integer"
          },
          "allowed_match_days": {
            "type": [
              "array",
              "null"
            ],
            "items": {}
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "season_id",
          "created_at",
          "updated_at",
          "match_start_time",
          "min_hours_between_team_matches",
          "min_days_between_phases",
          "allowed_match_days",
          "deleted_at"
        ],
        "title": "Pool"
      },
      "PoolCalendarResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "second_leg_is_enabled": {
            "type": "string"
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhaseResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "second_leg_is_enabled",
          "phases"
        ],
        "title": "PoolCalendarResource"
      },
      "PoolsRessource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "PoolsRessource"
      },
      "RegenerateReturnPhaseRequest": {
        "type": "object",
        "properties": {
          "pool_id": {
            "type": "string",
            "format": "uuid"
          },
          "season_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "match_start_time": {
            "type": "string",
            "description": "Configuration de la poule"
          },
          "min_hours_between_team_matches": {
            "type": "integer",
            "minimum": 1,
            "maximum": 168
          },
          "min_days_between_phases": {
            "type": "integer",
            "minimum": 1,
            "maximum": 30
          },
          "allowed_match_days": {
            "type": "array",
            "description": "Jours autorisÃ©s",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "minItems": 1,
            "maxItems": 7
          },
          "stadiums_ids": {
            "type": "array",
            "description": "Stades",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1
          },
          "skip_dates": {
            "type": "array",
            "description": "Dates Ã  Ã©viter (optionnel)",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "teams": {
            "type": "array",
            "description": "Ãquipes et stades avec dÃ©tails (optionnel pour override)",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "city": {
                  "type": "string",
                  "maxLength": 100
                }
              }
            }
          },
          "stadiums": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "city": {
                  "type": "string",
                  "maxLength": 100
                }
              }
            }
          }
        },
        "required": [
          "pool_id",
          "season_id",
          "start_date",
          "end_date"
        ],
        "title": "RegenerateReturnPhaseRequest"
      },
      "ReportResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "submitted_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "match_id",
          "content",
          "submitted_at"
        ],
        "title": "ReportResource"
      },
      "RevokeFormRequest": {
        "type": "object",
        "properties": {
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "internal_notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "reasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "required": [
          "reasons"
        ],
        "title": "RevokeFormRequest"
      },
      "RoleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResource"
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "RoleResource"
      },
      "RoleSummarizeResource": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "slug",
          "name"
        ],
        "title": "RoleSummarizeResource"
      },
      "SeasonResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueResource"
          },
          "setting": {
            "$ref": "#/components/schemas/SettingResource"
          },
          "pools": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "start_date",
          "end_date"
        ],
        "title": "SeasonResource"
      },
      "SeasonSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "calendar_generated": {
            "type": "string"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueResource"
          },
          "pools": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "start_date",
          "end_date",
          "calendar_generated"
        ],
        "title": "SeasonSummaryResource"
      },
      "SettingResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "match_start_time": {
            "type": "string"
          },
          "allowed_days": {
            "type": "string"
          },
          "min_hours_between_team_matches": {
            "type": "string"
          },
          "min_days_between_phases": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "match_start_time",
          "allowed_days",
          "min_hours_between_team_matches",
          "min_days_between_phases"
        ],
        "title": "SettingResource"
      },
      "SpecializationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "certified_at": {
            "type": "string"
          },
          "level": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "certified_at",
          "level"
        ],
        "title": "SpecializationResource"
      },
      "StadiumResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "max_matches_per_day": {
            "type": "string"
          },
          "city": {
            "$ref": "#/components/schemas/CityResource"
          },
          "type_of_field": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "max_matches_per_day",
          "type_of_field"
        ],
        "title": "StadiumResource"
      },
      "StadiumSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "max_matches_per_day": {
            "type": "string"
          },
          "city_id": {
            "type": "string"
          },
          "type_of_field": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "max_matches_per_day",
          "city_id",
          "type_of_field"
        ],
        "title": "StadiumSummaryResource"
      },
      "Staff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StaffRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "hire_date": {
            "type": [
              "string",
              "null"
            ]
          },
          "contract_end": {
            "type": [
              "string",
              "null"
            ]
          },
          "qualifications": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "role_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "user_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "current_team_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "full_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "phone",
          "role",
          "hire_date",
          "contract_end",
          "qualifications",
          "status",
          "deleted_at",
          "created_at",
          "updated_at",
          "role_id",
          "user_id",
          "current_team_id",
          "full_name"
        ],
        "title": "Staff"
      },
      "StaffContractResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "salary": {
            "type": "string"
          },
          "staff_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "start_date",
          "end_date",
          "salary",
          "staff_id",
          "status",
          "team_id"
        ],
        "title": "StaffContractResource"
      },
      "StaffResources": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaffContractResource"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "current_team": {
            "$ref": "#/components/schemas/TeamSummaryResource"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "phone",
          "email",
          "role"
        ],
        "title": "StaffResources"
      },
      "StaffRole": {
        "type": "string",
        "enum": [
          "COACH",
          "ASSISTANT_COACH",
          "GOALKEEPER_COACH",
          "PHYSICAL_TRAINER",
          "PHYSIOTHERAPIST",
          "DOCTOR",
          "MEDICAL_STAFF",
          "TEAM_MANAGER",
          "SCOUT",
          "GLACIER",
          "SECURITY_OFFICER",
          "ANALYST"
        ],
        "title": "StaffRole"
      },
      "StaffStoreFormRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 255
          },
          "last_name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          },
          "phone": {
            "type": "string",
            "maxLength": 255
          },
          "role": {
            "type": "string",
            "enum": [
              "COACH",
              "ASSISTANT_COACH",
              "GOALKEEPER_COACH",
              "PHYSICAL_TRAINER",
              "PHYSIOTHERAPIST",
              "DOCTOR",
              "TEAM_MANAGER",
              "SCOUT",
              "ANALYST",
              "GLACIER",
              "SECURITY_OFFICER"
            ]
          },
          "contract": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "team_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "salary_amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE"
                  ]
                },
                "clauses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "notes": {
                  "type": "string"
                }
              },
              "required": [
                "team_id",
                "start_date",
                "status"
              ]
            }
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone",
          "role"
        ],
        "title": "StaffStoreFormRequest"
      },
      "StatisticsResource": {
        "type": "object",
        "properties": {
          "matches_officiated": {
            "type": "string"
          },
          "red_cards": {
            "type": "string"
          },
          "yellow_cards": {
            "type": "string"
          }
        },
        "required": [
          "matches_officiated",
          "red_cards",
          "yellow_cards"
        ],
        "title": "StatisticsResource"
      },
      "StoreFormRequest": {
        "type": "object",
        "description": "Summary of StoreFormRequest",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 255
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 2048
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "fonded_year": {
            "type": [
              "number",
              "null"
            ]
          },
          "phone": {
            "type": [
              "number",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "SUSPENDED",
              "DISSOLVED"
            ]
          },
          "website": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "responsable_first_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "responsable_last_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "responsable_phone": {
            "type": [
              "number",
              "null"
            ]
          },
          "responsable_email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "responsable_position": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "street": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "country": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "city": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "abbreviation"
        ],
        "title": "StoreFormRequest"
      },
      "StoreLeagueRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 5120
          },
          "teams_count": {
            "type": "integer",
            "minimum": 2
          },
          "pools_count": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "name",
          "teams_count"
        ],
        "title": "StoreLeagueRequest"
      },
      "StoreOfficialReportFormRequest": {
        "type": "object",
        "properties": {
          "match_id": {
            "type": "string",
            "format": "uuid",
            "description": "=== OfficialReport ==="
          },
          "official_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "REVIEWED"
            ]
          },
          "review_notes": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 2000
          },
          "match_result": {
            "type": "object",
            "description": "=== MatchResultData ===",
            "properties": {
              "team_one_final_score": {
                "type": "integer",
                "minimum": 0
              },
              "team_two_final_score": {
                "type": "integer",
                "minimum": 0
              },
              "team_one_half_time_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "team_two_half_time_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "has_extra_time": {
                "type": "boolean"
              },
              "team_one_extra_time_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "team_two_extra_time_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "has_penalties": {
                "type": "boolean"
              },
              "team_one_penalty_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "team_two_penalty_score": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              }
            }
          },
          "match_evaluation": {
            "type": "object",
            "description": "=== MatchEvaluationData ===",
            "properties": {
              "difficulty_level": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "Normal",
                  "ÃlevÃ©",
                  "TrÃ¨s ÃlevÃ©"
                ]
              },
              "team_one_attitude": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "team_two_attitude": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "public_attitude": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "field_condition": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 500
              },
              "organization_observation": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "general_organization": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "control_service": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 500
              },
              "police_service": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 500
              },
              "medical_service": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 500
              },
              "press_service": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 500
              },
              "spectator_count": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "incidents_or_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 2000
              }
            }
          },
          "main_referee_evaluation": {
            "type": "object",
            "description": "=== MainRefereeEvaluationData ===",
            "properties": {
              "referee_id": {
                "type": "string",
                "format": "uuid"
              },
              "match_control_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "match_control_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "physical_condition_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "physical_condition_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "personality_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "personality_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "collaboration_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "collaboration_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "coefficient": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1
              }
            }
          },
          "fourth_official_evaluation": {
            "type": "object",
            "description": "=== FourthOfficialEvaluationData ===",
            "properties": {
              "referee_id": {
                "type": "string",
                "format": "uuid"
              },
              "technical_area_control_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "technical_area_control_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "substitution_management_score": {
                "type": [
                  "number",
                  "null"
                ],
                "minimum": 0,
                "maximum": 100
              },
              "substitution_management_remarks": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 1000
              },
              "coefficient": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1
              }
            }
          },
          "sanctions": {
            "type": "array",
            "description": "=== DisciplinarySanctionData (array) ===",
            "items": {
              "type": "object",
              "properties": {
                "player_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "uuid"
                },
                "team_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "uuid"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "WARNING",
                    "EXPULSION"
                  ]
                },
                "jersey_number": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 10
                },
                "team": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 100
                },
                "license_number": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 50
                },
                "player_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 255
                },
                "minute": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 200
                },
                "reason": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 1000
                }
              }
            }
          },
          "assistant_evaluations": {
            "type": "array",
            "description": "=== AssistantRefereeEvaluationData (array - 2 assistants) ===",
            "items": {
              "type": "object",
              "properties": {
                "assistant_number": {
                  "type": "integer",
                  "enum": [
                    "1",
                    "2"
                  ]
                },
                "referee_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "law_interpretation_score": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 100
                },
                "law_interpretation_remarks": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 1000
                },
                "physical_condition_score": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 100
                },
                "physical_condition_remarks": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 1000
                },
                "collaboration_score": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 100
                },
                "collaboration_remarks": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 1000
                },
                "coefficient": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 1
                }
              }
            },
            "maxItems": 2
          }
        },
        "required": [
          "match_id",
          "official_id"
        ],
        "title": "StoreOfficialReportFormRequest"
      },
      "StorePermissionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "StorePermissionRequest"
      },
      "StoreRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "permissions"
        ],
        "title": "StoreRoleRequest"
      },
      "StoreSeasonRequest": {
        "type": "object",
        "description": "StoreSeasonRequest",
        "properties": {
          "league_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "match_start_time": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "min_hours_between_team_matches": {
            "type": "integer",
            "minimum": 48
          },
          "min_days_between_phases": {
            "type": "integer",
            "minimum": 1
          },
          "teams_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 2
          },
          "stadiums_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "allowed_match_days": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "minItems": 1
          },
          "skip_dates": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "min": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "id",
                "min"
              ]
            }
          },
          "derbies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "team_one_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "team_two_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "first_leg_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "first_leg_stadium_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "second_leg_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "second_leg_stadium_id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "required": [
          "league_id",
          "start_date",
          "min_hours_between_team_matches",
          "min_days_between_phases",
          "teams_ids",
          "stadiums_ids",
          "allowed_match_days"
        ],
        "title": "StoreSeasonRequest"
      },
      "StoreStadiumRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 10
          },
          "max_matches_per_day": {
            "type": "integer"
          },
          "city_id": {
            "type": "string",
            "format": "uuid"
          },
          "type_of_field": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "city_id",
          "type_of_field"
        ],
        "title": "StoreStadiumRequest"
      },
      "StoreTeamCategoryFormRequest": {
        "type": "object",
        "description": "Summary of StoreFormRequest",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "MIXED"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "StoreTeamCategoryFormRequest"
      },
      "StoreTeamRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 50
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "manager_first_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "manager_last_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "manager_role": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 5120
          },
          "city_id": {
            "type": "string",
            "format": "uuid"
          },
          "club_id": {
            "type": "string",
            "format": "uuid"
          },
          "category_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "abbreviation",
          "city_id"
        ],
        "title": "StoreTeamRequest"
      },
      "StoreUserRequest": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "last_name",
          "first_name",
          "email",
          "roles"
        ],
        "title": "StoreUserRequest"
      },
      "SuspensionFormRequest": {
        "type": "object",
        "description": "Summary of SuspensionFormRequest",
        "properties": {
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "internal_notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "effective_from": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "effective_until": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "reasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "required": [
          "reasons"
        ],
        "title": "SuspensionFormRequest"
      },
      "TeamCategoryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamSummaryResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "gender",
          "description",
          "metadata"
        ],
        "title": "TeamCategoryResource"
      },
      "TeamCategorySummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "gender",
          "description",
          "metadata"
        ],
        "title": "TeamCategorySummaryResource"
      },
      "TeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "manager_first_name": {
            "type": "string"
          },
          "manager_last_name": {
            "type": "string"
          },
          "manager_role": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "club_id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "city_name": {
            "type": "string"
          },
          "club_name": {
            "type": "string"
          },
          "city": {
            "$ref": "#/components/schemas/CityResource"
          },
          "club": {
            "$ref": "#/components/schemas/ClubSummaryResource"
          },
          "league": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "logo",
          "manager_first_name",
          "manager_last_name",
          "manager_role",
          "phone",
          "email",
          "club_id",
          "category_id",
          "city_name",
          "club_name"
        ],
        "title": "TeamResource"
      },
      "TeamStaffResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "team_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaffContractResource"
            }
          }
        },
        "required": [
          "id",
          "team_id",
          "team_name",
          "first_name",
          "last_name",
          "email",
          "full_name",
          "phone",
          "role",
          "created_at",
          "updated_at"
        ],
        "title": "TeamStaffResource"
      },
      "TeamSummaryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "manager_first_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "manager_last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "manager_role": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "city_id": {
            "type": "string"
          },
          "league": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "club": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "status",
          "logo",
          "manager_first_name",
          "manager_last_name",
          "manager_role",
          "phone",
          "email",
          "city_id"
        ],
        "title": "TeamSummaryResource"
      },
      "UpdateCityRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ],
        "title": "UpdateCityRequest"
      },
      "UpdateFootballMatchRequest": {
        "type": "object",
        "properties": {
          "team_one_id": {
            "type": "string",
            "format": "uuid",
            "description": "Ãquipes"
          },
          "team_two_id": {
            "type": "string",
            "format": "uuid"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time"
          },
          "stadium_id": {
            "type": "string",
            "format": "uuid"
          },
          "saison_id": {
            "type": "string",
            "format": "uuid"
          },
          "pool_id": {
            "type": "string",
            "format": "uuid"
          },
          "match_day_id": {
            "type": "string",
            "format": "uuid"
          },
          "match_start_time": {
            "type": "string",
            "format": "date"
          },
          "leg": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_derby": {
            "type": "integer",
            "enum": [
              "0",
              "1"
            ]
          }
        },
        "title": "UpdateFootballMatchRequest"
      },
      "UpdateFormReques": {
        "type": "object",
        "description": "Summary of UpdateFormReques",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 10
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 2048
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "SUSPENDED",
              "DISSOLVED"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "fonded_year": {
            "type": [
              "number",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "responsable_first_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "responsable_last_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "responsable_phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "responsable_email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "responsable_position": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "street": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "country": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "city": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          }
        },
        "title": "UpdateFormReques"
      },
      "UpdateLeagueRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 5120
          },
          "teams_count": {
            "type": "integer",
            "minimum": 2
          },
          "pools_count": {
            "type": "integer",
            "minimum": 1
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seasons": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "UpdateLeagueRequest"
      },
      "UpdateMatchResultRequest": {
        "type": "object",
        "description": "Summary of UpdateMatchResultRequest",
        "properties": {
          "home_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "away_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99
          },
          "halftime_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "halftime_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "extra_time_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_home_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "penalty_away_score": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 99
          },
          "result_type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "EXTRA_TIME",
              "PENALTIES"
            ]
          }
        },
        "title": "UpdateMatchResultRequest"
      },
      "UpdatePermissionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "UpdatePermissionRequest"
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "UpdateRoleRequest"
      },
      "UpdateSeasonRequest": {
        "type": "object",
        "description": "UpdateSeasonRequest",
        "properties": {
          "league_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "constraints": {
            "type": "object",
            "properties": {
              "match_start_time": {
                "type": "string",
                "format": "date-time"
              },
              "allowed_days": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "min_hours_between_team_matches": {
                "type": "number",
                "minimum": 48
              },
              "min_days_between_phases": {
                "type": "number",
                "minimum": 0
              },
              "cities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "min": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                },
                "minItems": 1
              }
            }
          }
        },
        "title": "UpdateSeasonRequest"
      },
      "UpdateStadiumRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 10
          },
          "max_matches_per_day": {
            "type": "integer"
          },
          "city_id": {
            "type": "string",
            "format": "uuid"
          },
          "type_of_field": {
            "type": "string"
          }
        },
        "required": [
          "type_of_field"
        ],
        "title": "UpdateStadiumRequest"
      },
      "UpdateTeamCategoryFromRequest": {
        "type": "object",
        "description": "Summary of UpdateTeamCategoryFromRequest",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "gender": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "MALE",
              "FEMALE",
              "MIXED"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "title": "UpdateTeamCategoryFromRequest"
      },
      "UpdateTeamRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 50
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "manager_first_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "manager_last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "manager_role": {
            "type": [
              "string",
              "null"
            ]
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 5120
          },
          "city_id": {
            "type": "string",
            "format": "uuid"
          },
          "club_id": {
            "type": "string",
            "format": "uuid"
          },
          "category_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "UpdateTeamRequest"
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 255
          },
          "last_name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "UpdateUserRequest"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "is_official": {
            "type": "string"
          },
          "is_coach": {
            "type": "string"
          },
          "official_id": {
            "type": "string"
          },
          "coach_id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResource"
            }
          }
        },
        "required": [
          "id",
          "last_name",
          "first_name",
          "email",
          "is_active",
          "is_official",
          "is_coach",
          "official_id",
          "coach_id",
          "team_id"
        ],
        "title": "UserResource"
      },
      "UserSummarizeResource": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "is_coach": {
            "type": "string"
          },
          "is_official": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleSummarizeResource"
            }
          }
        },
        "required": [
          "slug",
          "last_name",
          "first_name",
          "email",
          "is_active",
          "is_coach",
          "is_official"
        ],
        "title": "UserSummarizeResource"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "AuthorizationException": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}